Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DECLARATION
    DIVIDE
    ELSE
    EQ
    FOR
    GT
    GTE
    IF
    INSTRUCTION
    LT
    LTE
    MULTIPLY
    NEQ
    NUMBER
    VAR_GLOBAL

Grammar

Rule 0     S' -> statement
Rule 1     statement -> type declaration_list SEMICOLON
Rule 2     statement -> CONST type ID EQUALS expression SEMICOLON
Rule 3     declaration_list -> declaration
Rule 4     declaration_list -> declaration COMMA declaration_list
Rule 5     declaration -> ID
Rule 6     declaration -> ID EQUALS expression
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     type -> INT_TYPE
Rule 9     type -> FLOAT_TYPE
Rule 10    type -> BOOL_TYPE
Rule 11    type -> CHAR_TYPE
Rule 12    factor -> INTEGER
Rule 13    factor -> FLOAT
Rule 14    factor -> CHAR
Rule 15    factor -> BOOL
Rule 16    factor -> MINUS factor
Rule 17    factor -> PLUS factor
Rule 18    factor -> LPAREN INTEGER RPAREN
Rule 19    factor -> LPAREN FLOAT RPAREN
Rule 20    factor -> LPAREN MINUS FLOAT RPAREN
Rule 21    statements -> statement
Rule 22    statements -> statement statements
Rule 23    statement -> simple_assignment
Rule 24    statement -> array_declarationTab
Rule 25    statement -> declaration_assignment
Rule 26    statement -> array_assignment
Rule 27    statement -> type declarationTab_listTab SEMICOLON
Rule 28    statement -> const_declarationTab
Rule 29    const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON
Rule 30    array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON
Rule 31    declarationTab_listTab -> declarationTab
Rule 32    declarationTab_listTab -> declarationTab COMMA declarationTab_listTab
Rule 33    declarationTab -> ID
Rule 34    declarationTab -> ID EQUALS expressionTab
Rule 35    declarationTab -> ID LBRACKET INTEGER RBRACKET
Rule 36    expressionTab -> ID
Rule 37    expressionTab -> FLOAT
Rule 38    expressionTab -> INTEGER
Rule 39    expressionTab -> CHAR
Rule 40    factor -> ID LBRACKET expression RBRACKET
Rule 41    array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON
Rule 42    declaration_assignment -> type ID EQUALS expression SEMICOLON
Rule 43    simple_assignment -> ID EQUALS expression SEMICOLON
Rule 44    expression -> expression OR term
Rule 45    expression -> term
Rule 46    term -> term AND factor
Rule 47    term -> factor
Rule 48    factor -> ID
Rule 49    factor -> TRUE
Rule 50    factor -> FALSE
Rule 51    factor -> NOT ID
Rule 52    statement -> READ LPAREN ID RPAREN SEMICOLON
Rule 53    statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON
Rule 54    statement -> WRITE LPAREN write_content RPAREN SEMICOLON
Rule 55    write_content -> write_item
Rule 56    write_content -> write_content COMMA write_item
Rule 57    write_item -> ID
Rule 58    write_item -> ID LBRACKET INTEGER RBRACKET

Terminals, with rules where they appear

AND                  : 46
BOOL                 : 15
BOOL_TYPE            : 10
CHAR                 : 14 39
CHAR_TYPE            : 11
COLON                : 
COMMA                : 4 32 56
COMMENT              : 
CONST                : 2 29
DECLARATION          : 
DIVIDE               : 
ELSE                 : 
EQ                   : 
EQUALS               : 2 6 7 29 34 41 42 43
FALSE                : 50
FLOAT                : 13 19 20 37
FLOAT_TYPE           : 9
FOR                  : 
GT                   : 
GTE                  : 
ID                   : 2 5 6 7 29 30 33 34 35 36 40 41 42 43 48 51 52 53 57 58
IF                   : 
INSTRUCTION          : 
INTEGER              : 12 18 30 35 38 53 58
INT_TYPE             : 8
LBRACKET             : 30 35 40 41 53 58
LPAREN               : 18 19 20 52 53 54
LT                   : 
LTE                  : 
MINUS                : 16 20
MULTIPLY             : 
NEQ                  : 
NOT                  : 51
NUMBER               : 
OR                   : 44
PLUS                 : 17
RBRACKET             : 30 35 40 41 53 58
READ                 : 52 53
RPAREN               : 18 19 20 52 53 54
SEMICOLON            : 1 2 7 27 29 30 41 42 43 52 53 54
TRUE                 : 49
VAR_GLOBAL           : 
WRITE                : 54
error                : 

Nonterminals, with rules where they appear

array_assignment     : 26
array_declarationTab : 24
const_declarationTab : 28
declaration          : 3 4
declarationTab       : 31 32
declarationTab_listTab : 27 32
declaration_assignment : 25
declaration_list     : 1 4
expression           : 2 6 7 40 42 43 44
expressionTab        : 29 34 41 41
factor               : 16 17 46 47
simple_assignment    : 23
statement            : 21 22 0
statements           : 22
term                 : 44 45 46
type                 : 1 2 27 29 30 42
write_content        : 54 56
write_item           : 55 56

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . type declaration_list SEMICOLON
    (2) statement -> . CONST type ID EQUALS expression SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . simple_assignment
    (24) statement -> . array_declarationTab
    (25) statement -> . declaration_assignment
    (26) statement -> . array_assignment
    (27) statement -> . type declarationTab_listTab SEMICOLON
    (28) statement -> . const_declarationTab
    (52) statement -> . READ LPAREN ID RPAREN SEMICOLON
    (53) statement -> . READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON
    (54) statement -> . WRITE LPAREN write_content RPAREN SEMICOLON
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE
    (43) simple_assignment -> . ID EQUALS expression SEMICOLON
    (30) array_declarationTab -> . type ID LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> . type ID EQUALS expression SEMICOLON
    (41) array_assignment -> . ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON
    (29) const_declarationTab -> . CONST type ID EQUALS expressionTab SEMICOLON

    CONST           shift and go to state 3
    ID              shift and go to state 4
    READ            shift and go to state 10
    WRITE           shift and go to state 11
    INT_TYPE        shift and go to state 12
    FLOAT_TYPE      shift and go to state 13
    BOOL_TYPE       shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    statement                      shift and go to state 1
    type                           shift and go to state 2
    simple_assignment              shift and go to state 5
    array_declarationTab           shift and go to state 6
    declaration_assignment         shift and go to state 7
    array_assignment               shift and go to state 8
    const_declarationTab           shift and go to state 9

state 1

    (0) S' -> statement .



state 2

    (1) statement -> type . declaration_list SEMICOLON
    (27) statement -> type . declarationTab_listTab SEMICOLON
    (30) array_declarationTab -> type . ID LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> type . ID EQUALS expression SEMICOLON
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (31) declarationTab_listTab -> . declarationTab
    (32) declarationTab_listTab -> . declarationTab COMMA declarationTab_listTab
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression
    (33) declarationTab -> . ID
    (34) declarationTab -> . ID EQUALS expressionTab
    (35) declarationTab -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 18

    declaration_list               shift and go to state 16
    declarationTab_listTab         shift and go to state 17
    declaration                    shift and go to state 19
    declarationTab                 shift and go to state 20

state 3

    (2) statement -> CONST . type ID EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST . type ID EQUALS expressionTab SEMICOLON
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE

    INT_TYPE        shift and go to state 12
    FLOAT_TYPE      shift and go to state 13
    BOOL_TYPE       shift and go to state 14
    CHAR_TYPE       shift and go to state 15

    type                           shift and go to state 21

state 4

    (7) statement -> ID . EQUALS expression SEMICOLON
    (43) simple_assignment -> ID . EQUALS expression SEMICOLON
    (41) array_assignment -> ID . LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 22
    LBRACKET        shift and go to state 23


state 5

    (23) statement -> simple_assignment .

    $end            reduce using rule 23 (statement -> simple_assignment .)


state 6

    (24) statement -> array_declarationTab .

    $end            reduce using rule 24 (statement -> array_declarationTab .)


state 7

    (25) statement -> declaration_assignment .

    $end            reduce using rule 25 (statement -> declaration_assignment .)


state 8

    (26) statement -> array_assignment .

    $end            reduce using rule 26 (statement -> array_assignment .)


state 9

    (28) statement -> const_declarationTab .

    $end            reduce using rule 28 (statement -> const_declarationTab .)


state 10

    (52) statement -> READ . LPAREN ID RPAREN SEMICOLON
    (53) statement -> READ . LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON

    LPAREN          shift and go to state 24


state 11

    (54) statement -> WRITE . LPAREN write_content RPAREN SEMICOLON

    LPAREN          shift and go to state 25


state 12

    (8) type -> INT_TYPE .

    ID              reduce using rule 8 (type -> INT_TYPE .)


state 13

    (9) type -> FLOAT_TYPE .

    ID              reduce using rule 9 (type -> FLOAT_TYPE .)


state 14

    (10) type -> BOOL_TYPE .

    ID              reduce using rule 10 (type -> BOOL_TYPE .)


state 15

    (11) type -> CHAR_TYPE .

    ID              reduce using rule 11 (type -> CHAR_TYPE .)


state 16

    (1) statement -> type declaration_list . SEMICOLON

    SEMICOLON       shift and go to state 26


state 17

    (27) statement -> type declarationTab_listTab . SEMICOLON

    SEMICOLON       shift and go to state 27


state 18

    (30) array_declarationTab -> type ID . LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> type ID . EQUALS expression SEMICOLON
    (5) declaration -> ID .
    (6) declaration -> ID . EQUALS expression
    (33) declarationTab -> ID .
    (34) declarationTab -> ID . EQUALS expressionTab
    (35) declarationTab -> ID . LBRACKET INTEGER RBRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 5 (declaration -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 5 (declaration -> ID .)
    LBRACKET        shift and go to state 28
    EQUALS          shift and go to state 29
    COMMA           reduce using rule 5 (declaration -> ID .)
    SEMICOLON       reduce using rule 5 (declaration -> ID .)

  ! COMMA           [ reduce using rule 33 (declarationTab -> ID .) ]
  ! SEMICOLON       [ reduce using rule 33 (declarationTab -> ID .) ]


state 19

    (3) declaration_list -> declaration .
    (4) declaration_list -> declaration . COMMA declaration_list

    SEMICOLON       reduce using rule 3 (declaration_list -> declaration .)
    COMMA           shift and go to state 30


state 20

    (31) declarationTab_listTab -> declarationTab .
    (32) declarationTab_listTab -> declarationTab . COMMA declarationTab_listTab

    SEMICOLON       reduce using rule 31 (declarationTab_listTab -> declarationTab .)
    COMMA           shift and go to state 31


state 21

    (2) statement -> CONST type . ID EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST type . ID EQUALS expressionTab SEMICOLON

    ID              shift and go to state 32


state 22

    (7) statement -> ID EQUALS . expression SEMICOLON
    (43) simple_assignment -> ID EQUALS . expression SEMICOLON
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36

state 23

    (41) array_assignment -> ID LBRACKET . expressionTab RBRACKET EQUALS expressionTab SEMICOLON
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 47
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50
    CHAR            shift and go to state 51

    expressionTab                  shift and go to state 48

state 24

    (52) statement -> READ LPAREN . ID RPAREN SEMICOLON
    (53) statement -> READ LPAREN . ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON

    ID              shift and go to state 52


state 25

    (54) statement -> WRITE LPAREN . write_content RPAREN SEMICOLON
    (55) write_content -> . write_item
    (56) write_content -> . write_content COMMA write_item
    (57) write_item -> . ID
    (58) write_item -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 55

    write_content                  shift and go to state 53
    write_item                     shift and go to state 54

state 26

    (1) statement -> type declaration_list SEMICOLON .

    $end            reduce using rule 1 (statement -> type declaration_list SEMICOLON .)


state 27

    (27) statement -> type declarationTab_listTab SEMICOLON .

    $end            reduce using rule 27 (statement -> type declarationTab_listTab SEMICOLON .)


state 28

    (30) array_declarationTab -> type ID LBRACKET . INTEGER RBRACKET SEMICOLON
    (35) declarationTab -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 56


state 29

    (42) declaration_assignment -> type ID EQUALS . expression SEMICOLON
    (6) declaration -> ID EQUALS . expression
    (34) declarationTab -> ID EQUALS . expressionTab
    (44) expression -> . expression OR term
    (45) expression -> . term
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    ID              shift and go to state 57
    FLOAT           shift and go to state 60
    INTEGER         shift and go to state 61
    CHAR            shift and go to state 62
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 58
    expressionTab                  shift and go to state 59
    term                           shift and go to state 35
    factor                         shift and go to state 36

state 30

    (4) declaration_list -> declaration COMMA . declaration_list
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression

    ID              shift and go to state 64

    declaration                    shift and go to state 19
    declaration_list               shift and go to state 63

state 31

    (32) declarationTab_listTab -> declarationTab COMMA . declarationTab_listTab
    (31) declarationTab_listTab -> . declarationTab
    (32) declarationTab_listTab -> . declarationTab COMMA declarationTab_listTab
    (33) declarationTab -> . ID
    (34) declarationTab -> . ID EQUALS expressionTab
    (35) declarationTab -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 66

    declarationTab                 shift and go to state 20
    declarationTab_listTab         shift and go to state 65

state 32

    (2) statement -> CONST type ID . EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST type ID . EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 67


state 33

    (40) factor -> ID . LBRACKET expression RBRACKET
    (48) factor -> ID .

    LBRACKET        shift and go to state 68
    AND             reduce using rule 48 (factor -> ID .)
    SEMICOLON       reduce using rule 48 (factor -> ID .)
    OR              reduce using rule 48 (factor -> ID .)
    COMMA           reduce using rule 48 (factor -> ID .)
    RBRACKET        reduce using rule 48 (factor -> ID .)


state 34

    (7) statement -> ID EQUALS expression . SEMICOLON
    (43) simple_assignment -> ID EQUALS expression . SEMICOLON
    (44) expression -> expression . OR term

    SEMICOLON       shift and go to state 69
    OR              shift and go to state 70


state 35

    (45) expression -> term .
    (46) term -> term . AND factor

    SEMICOLON       reduce using rule 45 (expression -> term .)
    OR              reduce using rule 45 (expression -> term .)
    COMMA           reduce using rule 45 (expression -> term .)
    RBRACKET        reduce using rule 45 (expression -> term .)
    AND             shift and go to state 71


state 36

    (47) term -> factor .

    AND             reduce using rule 47 (term -> factor .)
    SEMICOLON       reduce using rule 47 (term -> factor .)
    OR              reduce using rule 47 (term -> factor .)
    COMMA           reduce using rule 47 (term -> factor .)
    RBRACKET        reduce using rule 47 (term -> factor .)


state 37

    (12) factor -> INTEGER .

    AND             reduce using rule 12 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 12 (factor -> INTEGER .)
    OR              reduce using rule 12 (factor -> INTEGER .)
    COMMA           reduce using rule 12 (factor -> INTEGER .)
    RBRACKET        reduce using rule 12 (factor -> INTEGER .)


state 38

    (13) factor -> FLOAT .

    AND             reduce using rule 13 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 13 (factor -> FLOAT .)
    OR              reduce using rule 13 (factor -> FLOAT .)
    COMMA           reduce using rule 13 (factor -> FLOAT .)
    RBRACKET        reduce using rule 13 (factor -> FLOAT .)


state 39

    (14) factor -> CHAR .

    AND             reduce using rule 14 (factor -> CHAR .)
    SEMICOLON       reduce using rule 14 (factor -> CHAR .)
    OR              reduce using rule 14 (factor -> CHAR .)
    COMMA           reduce using rule 14 (factor -> CHAR .)
    RBRACKET        reduce using rule 14 (factor -> CHAR .)


state 40

    (15) factor -> BOOL .

    AND             reduce using rule 15 (factor -> BOOL .)
    SEMICOLON       reduce using rule 15 (factor -> BOOL .)
    OR              reduce using rule 15 (factor -> BOOL .)
    COMMA           reduce using rule 15 (factor -> BOOL .)
    RBRACKET        reduce using rule 15 (factor -> BOOL .)


state 41

    (16) factor -> MINUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    factor                         shift and go to state 72

state 42

    (17) factor -> PLUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    factor                         shift and go to state 73

state 43

    (18) factor -> LPAREN . INTEGER RPAREN
    (19) factor -> LPAREN . FLOAT RPAREN
    (20) factor -> LPAREN . MINUS FLOAT RPAREN

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    MINUS           shift and go to state 76


state 44

    (49) factor -> TRUE .

    AND             reduce using rule 49 (factor -> TRUE .)
    SEMICOLON       reduce using rule 49 (factor -> TRUE .)
    OR              reduce using rule 49 (factor -> TRUE .)
    COMMA           reduce using rule 49 (factor -> TRUE .)
    RBRACKET        reduce using rule 49 (factor -> TRUE .)


state 45

    (50) factor -> FALSE .

    AND             reduce using rule 50 (factor -> FALSE .)
    SEMICOLON       reduce using rule 50 (factor -> FALSE .)
    OR              reduce using rule 50 (factor -> FALSE .)
    COMMA           reduce using rule 50 (factor -> FALSE .)
    RBRACKET        reduce using rule 50 (factor -> FALSE .)


state 46

    (51) factor -> NOT . ID

    ID              shift and go to state 77


state 47

    (36) expressionTab -> ID .

    RBRACKET        reduce using rule 36 (expressionTab -> ID .)
    COMMA           reduce using rule 36 (expressionTab -> ID .)
    SEMICOLON       reduce using rule 36 (expressionTab -> ID .)


state 48

    (41) array_assignment -> ID LBRACKET expressionTab . RBRACKET EQUALS expressionTab SEMICOLON

    RBRACKET        shift and go to state 78


state 49

    (37) expressionTab -> FLOAT .

    RBRACKET        reduce using rule 37 (expressionTab -> FLOAT .)
    COMMA           reduce using rule 37 (expressionTab -> FLOAT .)
    SEMICOLON       reduce using rule 37 (expressionTab -> FLOAT .)


state 50

    (38) expressionTab -> INTEGER .

    RBRACKET        reduce using rule 38 (expressionTab -> INTEGER .)
    COMMA           reduce using rule 38 (expressionTab -> INTEGER .)
    SEMICOLON       reduce using rule 38 (expressionTab -> INTEGER .)


state 51

    (39) expressionTab -> CHAR .

    RBRACKET        reduce using rule 39 (expressionTab -> CHAR .)
    COMMA           reduce using rule 39 (expressionTab -> CHAR .)
    SEMICOLON       reduce using rule 39 (expressionTab -> CHAR .)


state 52

    (52) statement -> READ LPAREN ID . RPAREN SEMICOLON
    (53) statement -> READ LPAREN ID . LBRACKET INTEGER RBRACKET RPAREN SEMICOLON

    RPAREN          shift and go to state 79
    LBRACKET        shift and go to state 80


state 53

    (54) statement -> WRITE LPAREN write_content . RPAREN SEMICOLON
    (56) write_content -> write_content . COMMA write_item

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 82


state 54

    (55) write_content -> write_item .

    RPAREN          reduce using rule 55 (write_content -> write_item .)
    COMMA           reduce using rule 55 (write_content -> write_item .)


state 55

    (57) write_item -> ID .
    (58) write_item -> ID . LBRACKET INTEGER RBRACKET

    RPAREN          reduce using rule 57 (write_item -> ID .)
    COMMA           reduce using rule 57 (write_item -> ID .)
    LBRACKET        shift and go to state 83


state 56

    (30) array_declarationTab -> type ID LBRACKET INTEGER . RBRACKET SEMICOLON
    (35) declarationTab -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 84


state 57

    (36) expressionTab -> ID .
    (40) factor -> ID . LBRACKET expression RBRACKET
    (48) factor -> ID .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 36 (expressionTab -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (expressionTab -> ID .)
    COMMA           reduce using rule 36 (expressionTab -> ID .)
    SEMICOLON       reduce using rule 36 (expressionTab -> ID .)
    LBRACKET        shift and go to state 68
    AND             reduce using rule 48 (factor -> ID .)
    OR              reduce using rule 48 (factor -> ID .)

  ! SEMICOLON       [ reduce using rule 48 (factor -> ID .) ]
  ! COMMA           [ reduce using rule 48 (factor -> ID .) ]


state 58

    (42) declaration_assignment -> type ID EQUALS expression . SEMICOLON
    (6) declaration -> ID EQUALS expression .
    (44) expression -> expression . OR term

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 85
    COMMA           reduce using rule 6 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 70

  ! SEMICOLON       [ reduce using rule 6 (declaration -> ID EQUALS expression .) ]


state 59

    (34) declarationTab -> ID EQUALS expressionTab .

    COMMA           reduce using rule 34 (declarationTab -> ID EQUALS expressionTab .)
    SEMICOLON       reduce using rule 34 (declarationTab -> ID EQUALS expressionTab .)


state 60

    (37) expressionTab -> FLOAT .
    (13) factor -> FLOAT .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 13 (factor -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 13 (factor -> FLOAT .)
    AND             reduce using rule 13 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 13 (factor -> FLOAT .)
    OR              reduce using rule 13 (factor -> FLOAT .)
    COMMA           reduce using rule 13 (factor -> FLOAT .)

  ! COMMA           [ reduce using rule 37 (expressionTab -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 37 (expressionTab -> FLOAT .) ]


state 61

    (38) expressionTab -> INTEGER .
    (12) factor -> INTEGER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (factor -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 12 (factor -> INTEGER .)
    AND             reduce using rule 12 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 12 (factor -> INTEGER .)
    OR              reduce using rule 12 (factor -> INTEGER .)
    COMMA           reduce using rule 12 (factor -> INTEGER .)

  ! COMMA           [ reduce using rule 38 (expressionTab -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 38 (expressionTab -> INTEGER .) ]


state 62

    (39) expressionTab -> CHAR .
    (14) factor -> CHAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 14 (factor -> CHAR .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (factor -> CHAR .)
    AND             reduce using rule 14 (factor -> CHAR .)
    SEMICOLON       reduce using rule 14 (factor -> CHAR .)
    OR              reduce using rule 14 (factor -> CHAR .)
    COMMA           reduce using rule 14 (factor -> CHAR .)

  ! COMMA           [ reduce using rule 39 (expressionTab -> CHAR .) ]
  ! SEMICOLON       [ reduce using rule 39 (expressionTab -> CHAR .) ]


state 63

    (4) declaration_list -> declaration COMMA declaration_list .

    SEMICOLON       reduce using rule 4 (declaration_list -> declaration COMMA declaration_list .)


state 64

    (5) declaration -> ID .
    (6) declaration -> ID . EQUALS expression

    COMMA           reduce using rule 5 (declaration -> ID .)
    SEMICOLON       reduce using rule 5 (declaration -> ID .)
    EQUALS          shift and go to state 86


state 65

    (32) declarationTab_listTab -> declarationTab COMMA declarationTab_listTab .

    SEMICOLON       reduce using rule 32 (declarationTab_listTab -> declarationTab COMMA declarationTab_listTab .)


state 66

    (33) declarationTab -> ID .
    (34) declarationTab -> ID . EQUALS expressionTab
    (35) declarationTab -> ID . LBRACKET INTEGER RBRACKET

    COMMA           reduce using rule 33 (declarationTab -> ID .)
    SEMICOLON       reduce using rule 33 (declarationTab -> ID .)
    EQUALS          shift and go to state 87
    LBRACKET        shift and go to state 88


state 67

    (2) statement -> CONST type ID EQUALS . expression SEMICOLON
    (29) const_declarationTab -> CONST type ID EQUALS . expressionTab SEMICOLON
    (44) expression -> . expression OR term
    (45) expression -> . term
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    ID              shift and go to state 57
    FLOAT           shift and go to state 60
    INTEGER         shift and go to state 61
    CHAR            shift and go to state 62
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 89
    expressionTab                  shift and go to state 90
    term                           shift and go to state 35
    factor                         shift and go to state 36

state 68

    (40) factor -> ID LBRACKET . expression RBRACKET
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 91
    term                           shift and go to state 35
    factor                         shift and go to state 36

state 69

    (7) statement -> ID EQUALS expression SEMICOLON .
    (43) simple_assignment -> ID EQUALS expression SEMICOLON .

  ! reduce/reduce conflict for $end resolved using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)

  ! $end            [ reduce using rule 43 (simple_assignment -> ID EQUALS expression SEMICOLON .) ]


state 70

    (44) expression -> expression OR . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    term                           shift and go to state 92
    factor                         shift and go to state 36

state 71

    (46) term -> term AND . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    factor                         shift and go to state 93

state 72

    (16) factor -> MINUS factor .

    AND             reduce using rule 16 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 16 (factor -> MINUS factor .)
    OR              reduce using rule 16 (factor -> MINUS factor .)
    COMMA           reduce using rule 16 (factor -> MINUS factor .)
    RBRACKET        reduce using rule 16 (factor -> MINUS factor .)


state 73

    (17) factor -> PLUS factor .

    AND             reduce using rule 17 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 17 (factor -> PLUS factor .)
    OR              reduce using rule 17 (factor -> PLUS factor .)
    COMMA           reduce using rule 17 (factor -> PLUS factor .)
    RBRACKET        reduce using rule 17 (factor -> PLUS factor .)


state 74

    (18) factor -> LPAREN INTEGER . RPAREN

    RPAREN          shift and go to state 94


state 75

    (19) factor -> LPAREN FLOAT . RPAREN

    RPAREN          shift and go to state 95


state 76

    (20) factor -> LPAREN MINUS . FLOAT RPAREN

    FLOAT           shift and go to state 96


state 77

    (51) factor -> NOT ID .

    AND             reduce using rule 51 (factor -> NOT ID .)
    SEMICOLON       reduce using rule 51 (factor -> NOT ID .)
    OR              reduce using rule 51 (factor -> NOT ID .)
    COMMA           reduce using rule 51 (factor -> NOT ID .)
    RBRACKET        reduce using rule 51 (factor -> NOT ID .)


state 78

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET . EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 97


state 79

    (52) statement -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 98


state 80

    (53) statement -> READ LPAREN ID LBRACKET . INTEGER RBRACKET RPAREN SEMICOLON

    INTEGER         shift and go to state 99


state 81

    (54) statement -> WRITE LPAREN write_content RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 100


state 82

    (56) write_content -> write_content COMMA . write_item
    (57) write_item -> . ID
    (58) write_item -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 55

    write_item                     shift and go to state 101

state 83

    (58) write_item -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 102


state 84

    (30) array_declarationTab -> type ID LBRACKET INTEGER RBRACKET . SEMICOLON
    (35) declarationTab -> ID LBRACKET INTEGER RBRACKET .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 103
    COMMA           reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)

  ! SEMICOLON       [ reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .) ]


state 85

    (42) declaration_assignment -> type ID EQUALS expression SEMICOLON .

    $end            reduce using rule 42 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)


state 86

    (6) declaration -> ID EQUALS . expression
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 37
    FLOAT           shift and go to state 38
    CHAR            shift and go to state 39
    BOOL            shift and go to state 40
    MINUS           shift and go to state 41
    PLUS            shift and go to state 42
    LPAREN          shift and go to state 43
    ID              shift and go to state 33
    TRUE            shift and go to state 44
    FALSE           shift and go to state 45
    NOT             shift and go to state 46

    expression                     shift and go to state 104
    term                           shift and go to state 35
    factor                         shift and go to state 36

state 87

    (34) declarationTab -> ID EQUALS . expressionTab
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 47
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50
    CHAR            shift and go to state 51

    expressionTab                  shift and go to state 59

state 88

    (35) declarationTab -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 105


state 89

    (2) statement -> CONST type ID EQUALS expression . SEMICOLON
    (44) expression -> expression . OR term

    SEMICOLON       shift and go to state 106
    OR              shift and go to state 70


state 90

    (29) const_declarationTab -> CONST type ID EQUALS expressionTab . SEMICOLON

    SEMICOLON       shift and go to state 107


state 91

    (40) factor -> ID LBRACKET expression . RBRACKET
    (44) expression -> expression . OR term

    RBRACKET        shift and go to state 108
    OR              shift and go to state 70


state 92

    (44) expression -> expression OR term .
    (46) term -> term . AND factor

    SEMICOLON       reduce using rule 44 (expression -> expression OR term .)
    OR              reduce using rule 44 (expression -> expression OR term .)
    COMMA           reduce using rule 44 (expression -> expression OR term .)
    RBRACKET        reduce using rule 44 (expression -> expression OR term .)
    AND             shift and go to state 71


state 93

    (46) term -> term AND factor .

    AND             reduce using rule 46 (term -> term AND factor .)
    SEMICOLON       reduce using rule 46 (term -> term AND factor .)
    OR              reduce using rule 46 (term -> term AND factor .)
    COMMA           reduce using rule 46 (term -> term AND factor .)
    RBRACKET        reduce using rule 46 (term -> term AND factor .)


state 94

    (18) factor -> LPAREN INTEGER RPAREN .

    AND             reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    SEMICOLON       reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    OR              reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    COMMA           reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    RBRACKET        reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)


state 95

    (19) factor -> LPAREN FLOAT RPAREN .

    AND             reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    SEMICOLON       reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    OR              reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    COMMA           reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    RBRACKET        reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)


state 96

    (20) factor -> LPAREN MINUS FLOAT . RPAREN

    RPAREN          shift and go to state 109


state 97

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS . expressionTab SEMICOLON
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 47
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50
    CHAR            shift and go to state 51

    expressionTab                  shift and go to state 110

state 98

    (52) statement -> READ LPAREN ID RPAREN SEMICOLON .

    $end            reduce using rule 52 (statement -> READ LPAREN ID RPAREN SEMICOLON .)


state 99

    (53) statement -> READ LPAREN ID LBRACKET INTEGER . RBRACKET RPAREN SEMICOLON

    RBRACKET        shift and go to state 111


state 100

    (54) statement -> WRITE LPAREN write_content RPAREN SEMICOLON .

    $end            reduce using rule 54 (statement -> WRITE LPAREN write_content RPAREN SEMICOLON .)


state 101

    (56) write_content -> write_content COMMA write_item .

    RPAREN          reduce using rule 56 (write_content -> write_content COMMA write_item .)
    COMMA           reduce using rule 56 (write_content -> write_content COMMA write_item .)


state 102

    (58) write_item -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 112


state 103

    (30) array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .

    $end            reduce using rule 30 (array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)


state 104

    (6) declaration -> ID EQUALS expression .
    (44) expression -> expression . OR term

    COMMA           reduce using rule 6 (declaration -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 6 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 70


state 105

    (35) declarationTab -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 113


state 106

    (2) statement -> CONST type ID EQUALS expression SEMICOLON .

    $end            reduce using rule 2 (statement -> CONST type ID EQUALS expression SEMICOLON .)


state 107

    (29) const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON .

    $end            reduce using rule 29 (const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON .)


state 108

    (40) factor -> ID LBRACKET expression RBRACKET .

    AND             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)


state 109

    (20) factor -> LPAREN MINUS FLOAT RPAREN .

    AND             reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    SEMICOLON       reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    OR              reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    COMMA           reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    RBRACKET        reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)


state 110

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab . SEMICOLON

    SEMICOLON       shift and go to state 114


state 111

    (53) statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET . RPAREN SEMICOLON

    RPAREN          shift and go to state 115


state 112

    (58) write_item -> ID LBRACKET INTEGER RBRACKET .

    RPAREN          reduce using rule 58 (write_item -> ID LBRACKET INTEGER RBRACKET .)
    COMMA           reduce using rule 58 (write_item -> ID LBRACKET INTEGER RBRACKET .)


state 113

    (35) declarationTab -> ID LBRACKET INTEGER RBRACKET .

    COMMA           reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)
    SEMICOLON       reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)


state 114

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON .

    $end            reduce using rule 41 (array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON .)


state 115

    (53) statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 116


state 116

    (53) statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON .

    $end            reduce using rule 53 (statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 58 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 84 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (declaration -> ID)
WARNING: rejected rule (declarationTab -> ID) in state 18
WARNING: reduce/reduce conflict in state 57 resolved using rule (expressionTab -> ID)
WARNING: rejected rule (factor -> ID) in state 57
WARNING: reduce/reduce conflict in state 60 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (expressionTab -> FLOAT) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (factor -> INTEGER)
WARNING: rejected rule (expressionTab -> INTEGER) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (factor -> CHAR)
WARNING: rejected rule (expressionTab -> CHAR) in state 62
WARNING: reduce/reduce conflict in state 69 resolved using rule (statement -> ID EQUALS expression SEMICOLON)
WARNING: rejected rule (simple_assignment -> ID EQUALS expression SEMICOLON) in state 69
WARNING: Rule (simple_assignment -> ID EQUALS expression SEMICOLON) is never reduced
