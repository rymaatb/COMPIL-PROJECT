Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DECLARATION
    DIVIDE
    ELSE
    EQ
    FOR
    GT
    GTE
    IF
    INSTRUCTION
    LT
    LTE
    MULTIPLY
    NEQ
    NUMBER
    VAR_GLOBAL

Grammar

Rule 0     S' -> statement
Rule 1     statement -> type declaration_list SEMICOLON
Rule 2     statement -> CONST type ID EQUALS expression SEMICOLON
Rule 3     declaration_list -> declaration
Rule 4     declaration_list -> declaration COMMA declaration_list
Rule 5     declaration -> ID
Rule 6     declaration -> ID EQUALS expression
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     type -> INT_TYPE
Rule 9     type -> FLOAT_TYPE
Rule 10    type -> BOOL_TYPE
Rule 11    type -> CHAR_TYPE
Rule 12    factor -> INTEGER
Rule 13    factor -> FLOAT
Rule 14    factor -> CHAR
Rule 15    factor -> BOOL
Rule 16    factor -> MINUS factor
Rule 17    factor -> PLUS factor
Rule 18    factor -> LPAREN INTEGER RPAREN
Rule 19    factor -> LPAREN FLOAT RPAREN
Rule 20    factor -> LPAREN MINUS FLOAT RPAREN
Rule 21    statements -> statement
Rule 22    statements -> statement statements
Rule 23    statement -> simple_assignment
Rule 24    statement -> array_declarationTab
Rule 25    statement -> declaration_assignment
Rule 26    statement -> array_assignment
Rule 27    statement -> type declarationTab_listTab SEMICOLON
Rule 28    statement -> const_declarationTab
Rule 29    const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON
Rule 30    array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON
Rule 31    declarationTab_listTab -> declarationTab
Rule 32    declarationTab_listTab -> declarationTab COMMA declarationTab_listTab
Rule 33    declarationTab -> ID
Rule 34    declarationTab -> ID EQUALS expressionTab
Rule 35    declarationTab -> ID LBRACKET INTEGER RBRACKET
Rule 36    expressionTab -> ID
Rule 37    expressionTab -> FLOAT
Rule 38    expressionTab -> INTEGER
Rule 39    expressionTab -> CHAR
Rule 40    factor -> ID LBRACKET expression RBRACKET
Rule 41    array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON
Rule 42    declaration_assignment -> type ID EQUALS expression SEMICOLON
Rule 43    simple_assignment -> ID EQUALS expression SEMICOLON
Rule 44    expression -> expression OR term
Rule 45    expression -> term
Rule 46    term -> term AND factor
Rule 47    term -> factor
Rule 48    factor -> ID
Rule 49    factor -> TRUE
Rule 50    factor -> FALSE
Rule 51    factor -> NOT ID

Terminals, with rules where they appear

AND                  : 46
BOOL                 : 15
BOOL_TYPE            : 10
CHAR                 : 14 39
CHAR_TYPE            : 11
COLON                : 
COMMA                : 4 32
COMMENT              : 
CONST                : 2 29
DECLARATION          : 
DIVIDE               : 
ELSE                 : 
EQ                   : 
EQUALS               : 2 6 7 29 34 41 42 43
FALSE                : 50
FLOAT                : 13 19 20 37
FLOAT_TYPE           : 9
FOR                  : 
GT                   : 
GTE                  : 
ID                   : 2 5 6 7 29 30 33 34 35 36 40 41 42 43 48 51
IF                   : 
INSTRUCTION          : 
INTEGER              : 12 18 30 35 38
INT_TYPE             : 8
LBRACKET             : 30 35 40 41
LPAREN               : 18 19 20
LT                   : 
LTE                  : 
MINUS                : 16 20
MULTIPLY             : 
NEQ                  : 
NOT                  : 51
NUMBER               : 
OR                   : 44
PLUS                 : 17
RBRACKET             : 30 35 40 41
RPAREN               : 18 19 20
SEMICOLON            : 1 2 7 27 29 30 41 42 43
TRUE                 : 49
VAR_GLOBAL           : 
error                : 

Nonterminals, with rules where they appear

array_assignment     : 26
array_declarationTab : 24
const_declarationTab : 28
declaration          : 3 4
declarationTab       : 31 32
declarationTab_listTab : 27 32
declaration_assignment : 25
declaration_list     : 1 4
expression           : 2 6 7 40 42 43 44
expressionTab        : 29 34 41 41
factor               : 16 17 46 47
simple_assignment    : 23
statement            : 21 22 0
statements           : 22
term                 : 44 45 46
type                 : 1 2 27 29 30 42

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . type declaration_list SEMICOLON
    (2) statement -> . CONST type ID EQUALS expression SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (23) statement -> . simple_assignment
    (24) statement -> . array_declarationTab
    (25) statement -> . declaration_assignment
    (26) statement -> . array_assignment
    (27) statement -> . type declarationTab_listTab SEMICOLON
    (28) statement -> . const_declarationTab
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE
    (43) simple_assignment -> . ID EQUALS expression SEMICOLON
    (30) array_declarationTab -> . type ID LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> . type ID EQUALS expression SEMICOLON
    (41) array_assignment -> . ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON
    (29) const_declarationTab -> . CONST type ID EQUALS expressionTab SEMICOLON

    CONST           shift and go to state 3
    ID              shift and go to state 4
    INT_TYPE        shift and go to state 10
    FLOAT_TYPE      shift and go to state 11
    BOOL_TYPE       shift and go to state 12
    CHAR_TYPE       shift and go to state 13

    statement                      shift and go to state 1
    type                           shift and go to state 2
    simple_assignment              shift and go to state 5
    array_declarationTab           shift and go to state 6
    declaration_assignment         shift and go to state 7
    array_assignment               shift and go to state 8
    const_declarationTab           shift and go to state 9

state 1

    (0) S' -> statement .



state 2

    (1) statement -> type . declaration_list SEMICOLON
    (27) statement -> type . declarationTab_listTab SEMICOLON
    (30) array_declarationTab -> type . ID LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> type . ID EQUALS expression SEMICOLON
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (31) declarationTab_listTab -> . declarationTab
    (32) declarationTab_listTab -> . declarationTab COMMA declarationTab_listTab
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression
    (33) declarationTab -> . ID
    (34) declarationTab -> . ID EQUALS expressionTab
    (35) declarationTab -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 16

    declaration_list               shift and go to state 14
    declarationTab_listTab         shift and go to state 15
    declaration                    shift and go to state 17
    declarationTab                 shift and go to state 18

state 3

    (2) statement -> CONST . type ID EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST . type ID EQUALS expressionTab SEMICOLON
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE

    INT_TYPE        shift and go to state 10
    FLOAT_TYPE      shift and go to state 11
    BOOL_TYPE       shift and go to state 12
    CHAR_TYPE       shift and go to state 13

    type                           shift and go to state 19

state 4

    (7) statement -> ID . EQUALS expression SEMICOLON
    (43) simple_assignment -> ID . EQUALS expression SEMICOLON
    (41) array_assignment -> ID . LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 20
    LBRACKET        shift and go to state 21


state 5

    (23) statement -> simple_assignment .

    $end            reduce using rule 23 (statement -> simple_assignment .)


state 6

    (24) statement -> array_declarationTab .

    $end            reduce using rule 24 (statement -> array_declarationTab .)


state 7

    (25) statement -> declaration_assignment .

    $end            reduce using rule 25 (statement -> declaration_assignment .)


state 8

    (26) statement -> array_assignment .

    $end            reduce using rule 26 (statement -> array_assignment .)


state 9

    (28) statement -> const_declarationTab .

    $end            reduce using rule 28 (statement -> const_declarationTab .)


state 10

    (8) type -> INT_TYPE .

    ID              reduce using rule 8 (type -> INT_TYPE .)


state 11

    (9) type -> FLOAT_TYPE .

    ID              reduce using rule 9 (type -> FLOAT_TYPE .)


state 12

    (10) type -> BOOL_TYPE .

    ID              reduce using rule 10 (type -> BOOL_TYPE .)


state 13

    (11) type -> CHAR_TYPE .

    ID              reduce using rule 11 (type -> CHAR_TYPE .)


state 14

    (1) statement -> type declaration_list . SEMICOLON

    SEMICOLON       shift and go to state 22


state 15

    (27) statement -> type declarationTab_listTab . SEMICOLON

    SEMICOLON       shift and go to state 23


state 16

    (30) array_declarationTab -> type ID . LBRACKET INTEGER RBRACKET SEMICOLON
    (42) declaration_assignment -> type ID . EQUALS expression SEMICOLON
    (5) declaration -> ID .
    (6) declaration -> ID . EQUALS expression
    (33) declarationTab -> ID .
    (34) declarationTab -> ID . EQUALS expressionTab
    (35) declarationTab -> ID . LBRACKET INTEGER RBRACKET

  ! reduce/reduce conflict for COMMA resolved using rule 5 (declaration -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 5 (declaration -> ID .)
    LBRACKET        shift and go to state 24
    EQUALS          shift and go to state 25
    COMMA           reduce using rule 5 (declaration -> ID .)
    SEMICOLON       reduce using rule 5 (declaration -> ID .)

  ! COMMA           [ reduce using rule 33 (declarationTab -> ID .) ]
  ! SEMICOLON       [ reduce using rule 33 (declarationTab -> ID .) ]


state 17

    (3) declaration_list -> declaration .
    (4) declaration_list -> declaration . COMMA declaration_list

    SEMICOLON       reduce using rule 3 (declaration_list -> declaration .)
    COMMA           shift and go to state 26


state 18

    (31) declarationTab_listTab -> declarationTab .
    (32) declarationTab_listTab -> declarationTab . COMMA declarationTab_listTab

    SEMICOLON       reduce using rule 31 (declarationTab_listTab -> declarationTab .)
    COMMA           shift and go to state 27


state 19

    (2) statement -> CONST type . ID EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST type . ID EQUALS expressionTab SEMICOLON

    ID              shift and go to state 28


state 20

    (7) statement -> ID EQUALS . expression SEMICOLON
    (43) simple_assignment -> ID EQUALS . expression SEMICOLON
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    expression                     shift and go to state 30
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 21

    (41) array_assignment -> ID LBRACKET . expressionTab RBRACKET EQUALS expressionTab SEMICOLON
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 43
    FLOAT           shift and go to state 45
    INTEGER         shift and go to state 46
    CHAR            shift and go to state 47

    expressionTab                  shift and go to state 44

state 22

    (1) statement -> type declaration_list SEMICOLON .

    $end            reduce using rule 1 (statement -> type declaration_list SEMICOLON .)


state 23

    (27) statement -> type declarationTab_listTab SEMICOLON .

    $end            reduce using rule 27 (statement -> type declarationTab_listTab SEMICOLON .)


state 24

    (30) array_declarationTab -> type ID LBRACKET . INTEGER RBRACKET SEMICOLON
    (35) declarationTab -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 48


state 25

    (42) declaration_assignment -> type ID EQUALS . expression SEMICOLON
    (6) declaration -> ID EQUALS . expression
    (34) declarationTab -> ID EQUALS . expressionTab
    (44) expression -> . expression OR term
    (45) expression -> . term
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    ID              shift and go to state 49
    FLOAT           shift and go to state 52
    INTEGER         shift and go to state 53
    CHAR            shift and go to state 54
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    expression                     shift and go to state 50
    expressionTab                  shift and go to state 51
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 26

    (4) declaration_list -> declaration COMMA . declaration_list
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression

    ID              shift and go to state 56

    declaration                    shift and go to state 17
    declaration_list               shift and go to state 55

state 27

    (32) declarationTab_listTab -> declarationTab COMMA . declarationTab_listTab
    (31) declarationTab_listTab -> . declarationTab
    (32) declarationTab_listTab -> . declarationTab COMMA declarationTab_listTab
    (33) declarationTab -> . ID
    (34) declarationTab -> . ID EQUALS expressionTab
    (35) declarationTab -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 58

    declarationTab                 shift and go to state 18
    declarationTab_listTab         shift and go to state 57

state 28

    (2) statement -> CONST type ID . EQUALS expression SEMICOLON
    (29) const_declarationTab -> CONST type ID . EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 59


state 29

    (40) factor -> ID . LBRACKET expression RBRACKET
    (48) factor -> ID .

    LBRACKET        shift and go to state 60
    AND             reduce using rule 48 (factor -> ID .)
    SEMICOLON       reduce using rule 48 (factor -> ID .)
    OR              reduce using rule 48 (factor -> ID .)
    COMMA           reduce using rule 48 (factor -> ID .)
    RBRACKET        reduce using rule 48 (factor -> ID .)


state 30

    (7) statement -> ID EQUALS expression . SEMICOLON
    (43) simple_assignment -> ID EQUALS expression . SEMICOLON
    (44) expression -> expression . OR term

    SEMICOLON       shift and go to state 61
    OR              shift and go to state 62


state 31

    (45) expression -> term .
    (46) term -> term . AND factor

    SEMICOLON       reduce using rule 45 (expression -> term .)
    OR              reduce using rule 45 (expression -> term .)
    COMMA           reduce using rule 45 (expression -> term .)
    RBRACKET        reduce using rule 45 (expression -> term .)
    AND             shift and go to state 63


state 32

    (47) term -> factor .

    AND             reduce using rule 47 (term -> factor .)
    SEMICOLON       reduce using rule 47 (term -> factor .)
    OR              reduce using rule 47 (term -> factor .)
    COMMA           reduce using rule 47 (term -> factor .)
    RBRACKET        reduce using rule 47 (term -> factor .)


state 33

    (12) factor -> INTEGER .

    AND             reduce using rule 12 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 12 (factor -> INTEGER .)
    OR              reduce using rule 12 (factor -> INTEGER .)
    COMMA           reduce using rule 12 (factor -> INTEGER .)
    RBRACKET        reduce using rule 12 (factor -> INTEGER .)


state 34

    (13) factor -> FLOAT .

    AND             reduce using rule 13 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 13 (factor -> FLOAT .)
    OR              reduce using rule 13 (factor -> FLOAT .)
    COMMA           reduce using rule 13 (factor -> FLOAT .)
    RBRACKET        reduce using rule 13 (factor -> FLOAT .)


state 35

    (14) factor -> CHAR .

    AND             reduce using rule 14 (factor -> CHAR .)
    SEMICOLON       reduce using rule 14 (factor -> CHAR .)
    OR              reduce using rule 14 (factor -> CHAR .)
    COMMA           reduce using rule 14 (factor -> CHAR .)
    RBRACKET        reduce using rule 14 (factor -> CHAR .)


state 36

    (15) factor -> BOOL .

    AND             reduce using rule 15 (factor -> BOOL .)
    SEMICOLON       reduce using rule 15 (factor -> BOOL .)
    OR              reduce using rule 15 (factor -> BOOL .)
    COMMA           reduce using rule 15 (factor -> BOOL .)
    RBRACKET        reduce using rule 15 (factor -> BOOL .)


state 37

    (16) factor -> MINUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    factor                         shift and go to state 64

state 38

    (17) factor -> PLUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    factor                         shift and go to state 65

state 39

    (18) factor -> LPAREN . INTEGER RPAREN
    (19) factor -> LPAREN . FLOAT RPAREN
    (20) factor -> LPAREN . MINUS FLOAT RPAREN

    INTEGER         shift and go to state 66
    FLOAT           shift and go to state 67
    MINUS           shift and go to state 68


state 40

    (49) factor -> TRUE .

    AND             reduce using rule 49 (factor -> TRUE .)
    SEMICOLON       reduce using rule 49 (factor -> TRUE .)
    OR              reduce using rule 49 (factor -> TRUE .)
    COMMA           reduce using rule 49 (factor -> TRUE .)
    RBRACKET        reduce using rule 49 (factor -> TRUE .)


state 41

    (50) factor -> FALSE .

    AND             reduce using rule 50 (factor -> FALSE .)
    SEMICOLON       reduce using rule 50 (factor -> FALSE .)
    OR              reduce using rule 50 (factor -> FALSE .)
    COMMA           reduce using rule 50 (factor -> FALSE .)
    RBRACKET        reduce using rule 50 (factor -> FALSE .)


state 42

    (51) factor -> NOT . ID

    ID              shift and go to state 69


state 43

    (36) expressionTab -> ID .

    RBRACKET        reduce using rule 36 (expressionTab -> ID .)
    COMMA           reduce using rule 36 (expressionTab -> ID .)
    SEMICOLON       reduce using rule 36 (expressionTab -> ID .)


state 44

    (41) array_assignment -> ID LBRACKET expressionTab . RBRACKET EQUALS expressionTab SEMICOLON

    RBRACKET        shift and go to state 70


state 45

    (37) expressionTab -> FLOAT .

    RBRACKET        reduce using rule 37 (expressionTab -> FLOAT .)
    COMMA           reduce using rule 37 (expressionTab -> FLOAT .)
    SEMICOLON       reduce using rule 37 (expressionTab -> FLOAT .)


state 46

    (38) expressionTab -> INTEGER .

    RBRACKET        reduce using rule 38 (expressionTab -> INTEGER .)
    COMMA           reduce using rule 38 (expressionTab -> INTEGER .)
    SEMICOLON       reduce using rule 38 (expressionTab -> INTEGER .)


state 47

    (39) expressionTab -> CHAR .

    RBRACKET        reduce using rule 39 (expressionTab -> CHAR .)
    COMMA           reduce using rule 39 (expressionTab -> CHAR .)
    SEMICOLON       reduce using rule 39 (expressionTab -> CHAR .)


state 48

    (30) array_declarationTab -> type ID LBRACKET INTEGER . RBRACKET SEMICOLON
    (35) declarationTab -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 71


state 49

    (36) expressionTab -> ID .
    (40) factor -> ID . LBRACKET expression RBRACKET
    (48) factor -> ID .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 36 (expressionTab -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 36 (expressionTab -> ID .)
    COMMA           reduce using rule 36 (expressionTab -> ID .)
    SEMICOLON       reduce using rule 36 (expressionTab -> ID .)
    LBRACKET        shift and go to state 60
    AND             reduce using rule 48 (factor -> ID .)
    OR              reduce using rule 48 (factor -> ID .)

  ! SEMICOLON       [ reduce using rule 48 (factor -> ID .) ]
  ! COMMA           [ reduce using rule 48 (factor -> ID .) ]


state 50

    (42) declaration_assignment -> type ID EQUALS expression . SEMICOLON
    (6) declaration -> ID EQUALS expression .
    (44) expression -> expression . OR term

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 72
    COMMA           reduce using rule 6 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 62

  ! SEMICOLON       [ reduce using rule 6 (declaration -> ID EQUALS expression .) ]


state 51

    (34) declarationTab -> ID EQUALS expressionTab .

    COMMA           reduce using rule 34 (declarationTab -> ID EQUALS expressionTab .)
    SEMICOLON       reduce using rule 34 (declarationTab -> ID EQUALS expressionTab .)


state 52

    (37) expressionTab -> FLOAT .
    (13) factor -> FLOAT .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 13 (factor -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 13 (factor -> FLOAT .)
    AND             reduce using rule 13 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 13 (factor -> FLOAT .)
    OR              reduce using rule 13 (factor -> FLOAT .)
    COMMA           reduce using rule 13 (factor -> FLOAT .)

  ! COMMA           [ reduce using rule 37 (expressionTab -> FLOAT .) ]
  ! SEMICOLON       [ reduce using rule 37 (expressionTab -> FLOAT .) ]


state 53

    (38) expressionTab -> INTEGER .
    (12) factor -> INTEGER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 12 (factor -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 12 (factor -> INTEGER .)
    AND             reduce using rule 12 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 12 (factor -> INTEGER .)
    OR              reduce using rule 12 (factor -> INTEGER .)
    COMMA           reduce using rule 12 (factor -> INTEGER .)

  ! COMMA           [ reduce using rule 38 (expressionTab -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 38 (expressionTab -> INTEGER .) ]


state 54

    (39) expressionTab -> CHAR .
    (14) factor -> CHAR .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 14 (factor -> CHAR .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (factor -> CHAR .)
    AND             reduce using rule 14 (factor -> CHAR .)
    SEMICOLON       reduce using rule 14 (factor -> CHAR .)
    OR              reduce using rule 14 (factor -> CHAR .)
    COMMA           reduce using rule 14 (factor -> CHAR .)

  ! COMMA           [ reduce using rule 39 (expressionTab -> CHAR .) ]
  ! SEMICOLON       [ reduce using rule 39 (expressionTab -> CHAR .) ]


state 55

    (4) declaration_list -> declaration COMMA declaration_list .

    SEMICOLON       reduce using rule 4 (declaration_list -> declaration COMMA declaration_list .)


state 56

    (5) declaration -> ID .
    (6) declaration -> ID . EQUALS expression

    COMMA           reduce using rule 5 (declaration -> ID .)
    SEMICOLON       reduce using rule 5 (declaration -> ID .)
    EQUALS          shift and go to state 73


state 57

    (32) declarationTab_listTab -> declarationTab COMMA declarationTab_listTab .

    SEMICOLON       reduce using rule 32 (declarationTab_listTab -> declarationTab COMMA declarationTab_listTab .)


state 58

    (33) declarationTab -> ID .
    (34) declarationTab -> ID . EQUALS expressionTab
    (35) declarationTab -> ID . LBRACKET INTEGER RBRACKET

    COMMA           reduce using rule 33 (declarationTab -> ID .)
    SEMICOLON       reduce using rule 33 (declarationTab -> ID .)
    EQUALS          shift and go to state 74
    LBRACKET        shift and go to state 75


state 59

    (2) statement -> CONST type ID EQUALS . expression SEMICOLON
    (29) const_declarationTab -> CONST type ID EQUALS . expressionTab SEMICOLON
    (44) expression -> . expression OR term
    (45) expression -> . term
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    ID              shift and go to state 49
    FLOAT           shift and go to state 52
    INTEGER         shift and go to state 53
    CHAR            shift and go to state 54
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    expression                     shift and go to state 76
    expressionTab                  shift and go to state 77
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 60

    (40) factor -> ID LBRACKET . expression RBRACKET
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    expression                     shift and go to state 78
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 61

    (7) statement -> ID EQUALS expression SEMICOLON .
    (43) simple_assignment -> ID EQUALS expression SEMICOLON .

  ! reduce/reduce conflict for $end resolved using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)

  ! $end            [ reduce using rule 43 (simple_assignment -> ID EQUALS expression SEMICOLON .) ]


state 62

    (44) expression -> expression OR . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    term                           shift and go to state 79
    factor                         shift and go to state 32

state 63

    (46) term -> term AND . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    factor                         shift and go to state 80

state 64

    (16) factor -> MINUS factor .

    AND             reduce using rule 16 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 16 (factor -> MINUS factor .)
    OR              reduce using rule 16 (factor -> MINUS factor .)
    COMMA           reduce using rule 16 (factor -> MINUS factor .)
    RBRACKET        reduce using rule 16 (factor -> MINUS factor .)


state 65

    (17) factor -> PLUS factor .

    AND             reduce using rule 17 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 17 (factor -> PLUS factor .)
    OR              reduce using rule 17 (factor -> PLUS factor .)
    COMMA           reduce using rule 17 (factor -> PLUS factor .)
    RBRACKET        reduce using rule 17 (factor -> PLUS factor .)


state 66

    (18) factor -> LPAREN INTEGER . RPAREN

    RPAREN          shift and go to state 81


state 67

    (19) factor -> LPAREN FLOAT . RPAREN

    RPAREN          shift and go to state 82


state 68

    (20) factor -> LPAREN MINUS . FLOAT RPAREN

    FLOAT           shift and go to state 83


state 69

    (51) factor -> NOT ID .

    AND             reduce using rule 51 (factor -> NOT ID .)
    SEMICOLON       reduce using rule 51 (factor -> NOT ID .)
    OR              reduce using rule 51 (factor -> NOT ID .)
    COMMA           reduce using rule 51 (factor -> NOT ID .)
    RBRACKET        reduce using rule 51 (factor -> NOT ID .)


state 70

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET . EQUALS expressionTab SEMICOLON

    EQUALS          shift and go to state 84


state 71

    (30) array_declarationTab -> type ID LBRACKET INTEGER RBRACKET . SEMICOLON
    (35) declarationTab -> ID LBRACKET INTEGER RBRACKET .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 85
    COMMA           reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)

  ! SEMICOLON       [ reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .) ]


state 72

    (42) declaration_assignment -> type ID EQUALS expression SEMICOLON .

    $end            reduce using rule 42 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)


state 73

    (6) declaration -> ID EQUALS . expression
    (44) expression -> . expression OR term
    (45) expression -> . term
    (46) term -> . term AND factor
    (47) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (40) factor -> . ID LBRACKET expression RBRACKET
    (48) factor -> . ID
    (49) factor -> . TRUE
    (50) factor -> . FALSE
    (51) factor -> . NOT ID

    INTEGER         shift and go to state 33
    FLOAT           shift and go to state 34
    CHAR            shift and go to state 35
    BOOL            shift and go to state 36
    MINUS           shift and go to state 37
    PLUS            shift and go to state 38
    LPAREN          shift and go to state 39
    ID              shift and go to state 29
    TRUE            shift and go to state 40
    FALSE           shift and go to state 41
    NOT             shift and go to state 42

    expression                     shift and go to state 86
    term                           shift and go to state 31
    factor                         shift and go to state 32

state 74

    (34) declarationTab -> ID EQUALS . expressionTab
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 43
    FLOAT           shift and go to state 45
    INTEGER         shift and go to state 46
    CHAR            shift and go to state 47

    expressionTab                  shift and go to state 51

state 75

    (35) declarationTab -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 87


state 76

    (2) statement -> CONST type ID EQUALS expression . SEMICOLON
    (44) expression -> expression . OR term

    SEMICOLON       shift and go to state 88
    OR              shift and go to state 62


state 77

    (29) const_declarationTab -> CONST type ID EQUALS expressionTab . SEMICOLON

    SEMICOLON       shift and go to state 89


state 78

    (40) factor -> ID LBRACKET expression . RBRACKET
    (44) expression -> expression . OR term

    RBRACKET        shift and go to state 90
    OR              shift and go to state 62


state 79

    (44) expression -> expression OR term .
    (46) term -> term . AND factor

    SEMICOLON       reduce using rule 44 (expression -> expression OR term .)
    OR              reduce using rule 44 (expression -> expression OR term .)
    COMMA           reduce using rule 44 (expression -> expression OR term .)
    RBRACKET        reduce using rule 44 (expression -> expression OR term .)
    AND             shift and go to state 63


state 80

    (46) term -> term AND factor .

    AND             reduce using rule 46 (term -> term AND factor .)
    SEMICOLON       reduce using rule 46 (term -> term AND factor .)
    OR              reduce using rule 46 (term -> term AND factor .)
    COMMA           reduce using rule 46 (term -> term AND factor .)
    RBRACKET        reduce using rule 46 (term -> term AND factor .)


state 81

    (18) factor -> LPAREN INTEGER RPAREN .

    AND             reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    SEMICOLON       reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    OR              reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    COMMA           reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    RBRACKET        reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)


state 82

    (19) factor -> LPAREN FLOAT RPAREN .

    AND             reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    SEMICOLON       reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    OR              reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    COMMA           reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    RBRACKET        reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)


state 83

    (20) factor -> LPAREN MINUS FLOAT . RPAREN

    RPAREN          shift and go to state 91


state 84

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS . expressionTab SEMICOLON
    (36) expressionTab -> . ID
    (37) expressionTab -> . FLOAT
    (38) expressionTab -> . INTEGER
    (39) expressionTab -> . CHAR

    ID              shift and go to state 43
    FLOAT           shift and go to state 45
    INTEGER         shift and go to state 46
    CHAR            shift and go to state 47

    expressionTab                  shift and go to state 92

state 85

    (30) array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .

    $end            reduce using rule 30 (array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)


state 86

    (6) declaration -> ID EQUALS expression .
    (44) expression -> expression . OR term

    COMMA           reduce using rule 6 (declaration -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 6 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 62


state 87

    (35) declarationTab -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 93


state 88

    (2) statement -> CONST type ID EQUALS expression SEMICOLON .

    $end            reduce using rule 2 (statement -> CONST type ID EQUALS expression SEMICOLON .)


state 89

    (29) const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON .

    $end            reduce using rule 29 (const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON .)


state 90

    (40) factor -> ID LBRACKET expression RBRACKET .

    AND             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)


state 91

    (20) factor -> LPAREN MINUS FLOAT RPAREN .

    AND             reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    SEMICOLON       reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    OR              reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    COMMA           reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    RBRACKET        reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)


state 92

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab . SEMICOLON

    SEMICOLON       shift and go to state 94


state 93

    (35) declarationTab -> ID LBRACKET INTEGER RBRACKET .

    COMMA           reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)
    SEMICOLON       reduce using rule 35 (declarationTab -> ID LBRACKET INTEGER RBRACKET .)


state 94

    (41) array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON .

    $end            reduce using rule 41 (array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 50 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 71 resolved as shift
WARNING: reduce/reduce conflict in state 16 resolved using rule (declaration -> ID)
WARNING: rejected rule (declarationTab -> ID) in state 16
WARNING: reduce/reduce conflict in state 49 resolved using rule (expressionTab -> ID)
WARNING: rejected rule (factor -> ID) in state 49
WARNING: reduce/reduce conflict in state 52 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (expressionTab -> FLOAT) in state 52
WARNING: reduce/reduce conflict in state 53 resolved using rule (factor -> INTEGER)
WARNING: rejected rule (expressionTab -> INTEGER) in state 53
WARNING: reduce/reduce conflict in state 54 resolved using rule (factor -> CHAR)
WARNING: rejected rule (expressionTab -> CHAR) in state 54
WARNING: reduce/reduce conflict in state 61 resolved using rule (statement -> ID EQUALS expression SEMICOLON)
WARNING: rejected rule (simple_assignment -> ID EQUALS expression SEMICOLON) in state 61
WARNING: Rule (simple_assignment -> ID EQUALS expression SEMICOLON) is never reduced
