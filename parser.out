Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    DECLARATION
    DIVIDE
    ELSE
    EQ
    FOR
    GT
    GTE
    IF
    INSTRUCTION
    LBRACKET
    LT
    LTE
    MULTIPLY
    NEQ
    NUMBER
    RBRACKET
    VAR_GLOBAL

Grammar

Rule 0     S' -> statement
Rule 1     statement -> type declaration_list SEMICOLON
Rule 2     statement -> CONST type ID EQUALS expression SEMICOLON
Rule 3     declaration_list -> declaration
Rule 4     declaration_list -> declaration COMMA declaration_list
Rule 5     declaration -> ID
Rule 6     declaration -> ID EQUALS expression
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     type -> INT_TYPE
Rule 9     type -> FLOAT_TYPE
Rule 10    type -> BOOL_TYPE
Rule 11    type -> CHAR_TYPE
Rule 12    factor -> INTEGER
Rule 13    factor -> FLOAT
Rule 14    factor -> CHAR
Rule 15    factor -> BOOL
Rule 16    factor -> MINUS factor
Rule 17    factor -> PLUS factor
Rule 18    factor -> LPAREN INTEGER RPAREN
Rule 19    factor -> LPAREN FLOAT RPAREN
Rule 20    factor -> LPAREN MINUS FLOAT RPAREN
Rule 21    expression -> expression OR term
Rule 22    expression -> term
Rule 23    term -> term AND factor
Rule 24    term -> factor
Rule 25    factor -> ID
Rule 26    factor -> TRUE
Rule 27    factor -> FALSE
Rule 28    factor -> NOT ID

Terminals, with rules where they appear

AND                  : 23
BOOL                 : 15
BOOL_TYPE            : 10
CHAR                 : 14
CHAR_TYPE            : 11
COLON                : 
COMMA                : 4
COMMENT              : 
CONST                : 2
DECLARATION          : 
DIVIDE               : 
ELSE                 : 
EQ                   : 
EQUALS               : 2 6 7
FALSE                : 27
FLOAT                : 13 19 20
FLOAT_TYPE           : 9
FOR                  : 
GT                   : 
GTE                  : 
ID                   : 2 5 6 7 25 28
IF                   : 
INSTRUCTION          : 
INTEGER              : 12 18
INT_TYPE             : 8
LBRACKET             : 
LPAREN               : 18 19 20
LT                   : 
LTE                  : 
MINUS                : 16 20
MULTIPLY             : 
NEQ                  : 
NOT                  : 28
NUMBER               : 
OR                   : 21
PLUS                 : 17
RBRACKET             : 
RPAREN               : 18 19 20
SEMICOLON            : 1 2 7
TRUE                 : 26
VAR_GLOBAL           : 
error                : 

Nonterminals, with rules where they appear

declaration          : 3 4
declaration_list     : 1 4
expression           : 2 6 7 21
factor               : 16 17 23 24
statement            : 0
term                 : 21 22 23
type                 : 1 2

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . type declaration_list SEMICOLON
    (2) statement -> . CONST type ID EQUALS expression SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE

    CONST           shift and go to state 3
    ID              shift and go to state 4
    INT_TYPE        shift and go to state 5
    FLOAT_TYPE      shift and go to state 6
    BOOL_TYPE       shift and go to state 7
    CHAR_TYPE       shift and go to state 8

    statement                      shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> type . declaration_list SEMICOLON
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression

    ID              shift and go to state 11

    declaration_list               shift and go to state 9
    declaration                    shift and go to state 10

state 3

    (2) statement -> CONST . type ID EQUALS expression SEMICOLON
    (8) type -> . INT_TYPE
    (9) type -> . FLOAT_TYPE
    (10) type -> . BOOL_TYPE
    (11) type -> . CHAR_TYPE

    INT_TYPE        shift and go to state 5
    FLOAT_TYPE      shift and go to state 6
    BOOL_TYPE       shift and go to state 7
    CHAR_TYPE       shift and go to state 8

    type                           shift and go to state 12

state 4

    (7) statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 13


state 5

    (8) type -> INT_TYPE .

    ID              reduce using rule 8 (type -> INT_TYPE .)


state 6

    (9) type -> FLOAT_TYPE .

    ID              reduce using rule 9 (type -> FLOAT_TYPE .)


state 7

    (10) type -> BOOL_TYPE .

    ID              reduce using rule 10 (type -> BOOL_TYPE .)


state 8

    (11) type -> CHAR_TYPE .

    ID              reduce using rule 11 (type -> CHAR_TYPE .)


state 9

    (1) statement -> type declaration_list . SEMICOLON

    SEMICOLON       shift and go to state 14


state 10

    (3) declaration_list -> declaration .
    (4) declaration_list -> declaration . COMMA declaration_list

    SEMICOLON       reduce using rule 3 (declaration_list -> declaration .)
    COMMA           shift and go to state 15


state 11

    (5) declaration -> ID .
    (6) declaration -> ID . EQUALS expression

    COMMA           reduce using rule 5 (declaration -> ID .)
    SEMICOLON       reduce using rule 5 (declaration -> ID .)
    EQUALS          shift and go to state 16


state 12

    (2) statement -> CONST type . ID EQUALS expression SEMICOLON

    ID              shift and go to state 17


state 13

    (7) statement -> ID EQUALS . expression SEMICOLON
    (21) expression -> . expression OR term
    (22) expression -> . term
    (23) term -> . term AND factor
    (24) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    expression                     shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 21

state 14

    (1) statement -> type declaration_list SEMICOLON .

    $end            reduce using rule 1 (statement -> type declaration_list SEMICOLON .)


state 15

    (4) declaration_list -> declaration COMMA . declaration_list
    (3) declaration_list -> . declaration
    (4) declaration_list -> . declaration COMMA declaration_list
    (5) declaration -> . ID
    (6) declaration -> . ID EQUALS expression

    ID              shift and go to state 11

    declaration                    shift and go to state 10
    declaration_list               shift and go to state 32

state 16

    (6) declaration -> ID EQUALS . expression
    (21) expression -> . expression OR term
    (22) expression -> . term
    (23) term -> . term AND factor
    (24) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    expression                     shift and go to state 33
    term                           shift and go to state 20
    factor                         shift and go to state 21

state 17

    (2) statement -> CONST type ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 34


state 18

    (25) factor -> ID .

    AND             reduce using rule 25 (factor -> ID .)
    SEMICOLON       reduce using rule 25 (factor -> ID .)
    OR              reduce using rule 25 (factor -> ID .)
    COMMA           reduce using rule 25 (factor -> ID .)


state 19

    (7) statement -> ID EQUALS expression . SEMICOLON
    (21) expression -> expression . OR term

    SEMICOLON       shift and go to state 35
    OR              shift and go to state 36


state 20

    (22) expression -> term .
    (23) term -> term . AND factor

    SEMICOLON       reduce using rule 22 (expression -> term .)
    OR              reduce using rule 22 (expression -> term .)
    COMMA           reduce using rule 22 (expression -> term .)
    AND             shift and go to state 37


state 21

    (24) term -> factor .

    AND             reduce using rule 24 (term -> factor .)
    SEMICOLON       reduce using rule 24 (term -> factor .)
    OR              reduce using rule 24 (term -> factor .)
    COMMA           reduce using rule 24 (term -> factor .)


state 22

    (12) factor -> INTEGER .

    AND             reduce using rule 12 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 12 (factor -> INTEGER .)
    OR              reduce using rule 12 (factor -> INTEGER .)
    COMMA           reduce using rule 12 (factor -> INTEGER .)


state 23

    (13) factor -> FLOAT .

    AND             reduce using rule 13 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 13 (factor -> FLOAT .)
    OR              reduce using rule 13 (factor -> FLOAT .)
    COMMA           reduce using rule 13 (factor -> FLOAT .)


state 24

    (14) factor -> CHAR .

    AND             reduce using rule 14 (factor -> CHAR .)
    SEMICOLON       reduce using rule 14 (factor -> CHAR .)
    OR              reduce using rule 14 (factor -> CHAR .)
    COMMA           reduce using rule 14 (factor -> CHAR .)


state 25

    (15) factor -> BOOL .

    AND             reduce using rule 15 (factor -> BOOL .)
    SEMICOLON       reduce using rule 15 (factor -> BOOL .)
    OR              reduce using rule 15 (factor -> BOOL .)
    COMMA           reduce using rule 15 (factor -> BOOL .)


state 26

    (16) factor -> MINUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    factor                         shift and go to state 38

state 27

    (17) factor -> PLUS . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    factor                         shift and go to state 39

state 28

    (18) factor -> LPAREN . INTEGER RPAREN
    (19) factor -> LPAREN . FLOAT RPAREN
    (20) factor -> LPAREN . MINUS FLOAT RPAREN

    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    MINUS           shift and go to state 42


state 29

    (26) factor -> TRUE .

    AND             reduce using rule 26 (factor -> TRUE .)
    SEMICOLON       reduce using rule 26 (factor -> TRUE .)
    OR              reduce using rule 26 (factor -> TRUE .)
    COMMA           reduce using rule 26 (factor -> TRUE .)


state 30

    (27) factor -> FALSE .

    AND             reduce using rule 27 (factor -> FALSE .)
    SEMICOLON       reduce using rule 27 (factor -> FALSE .)
    OR              reduce using rule 27 (factor -> FALSE .)
    COMMA           reduce using rule 27 (factor -> FALSE .)


state 31

    (28) factor -> NOT . ID

    ID              shift and go to state 43


state 32

    (4) declaration_list -> declaration COMMA declaration_list .

    SEMICOLON       reduce using rule 4 (declaration_list -> declaration COMMA declaration_list .)


state 33

    (6) declaration -> ID EQUALS expression .
    (21) expression -> expression . OR term

    COMMA           reduce using rule 6 (declaration -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 6 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 36


state 34

    (2) statement -> CONST type ID EQUALS . expression SEMICOLON
    (21) expression -> . expression OR term
    (22) expression -> . term
    (23) term -> . term AND factor
    (24) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    expression                     shift and go to state 44
    term                           shift and go to state 20
    factor                         shift and go to state 21

state 35

    (7) statement -> ID EQUALS expression SEMICOLON .

    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)


state 36

    (21) expression -> expression OR . term
    (23) term -> . term AND factor
    (24) term -> . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    term                           shift and go to state 45
    factor                         shift and go to state 21

state 37

    (23) term -> term AND . factor
    (12) factor -> . INTEGER
    (13) factor -> . FLOAT
    (14) factor -> . CHAR
    (15) factor -> . BOOL
    (16) factor -> . MINUS factor
    (17) factor -> . PLUS factor
    (18) factor -> . LPAREN INTEGER RPAREN
    (19) factor -> . LPAREN FLOAT RPAREN
    (20) factor -> . LPAREN MINUS FLOAT RPAREN
    (25) factor -> . ID
    (26) factor -> . TRUE
    (27) factor -> . FALSE
    (28) factor -> . NOT ID

    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23
    CHAR            shift and go to state 24
    BOOL            shift and go to state 25
    MINUS           shift and go to state 26
    PLUS            shift and go to state 27
    LPAREN          shift and go to state 28
    ID              shift and go to state 18
    TRUE            shift and go to state 29
    FALSE           shift and go to state 30
    NOT             shift and go to state 31

    factor                         shift and go to state 46

state 38

    (16) factor -> MINUS factor .

    AND             reduce using rule 16 (factor -> MINUS factor .)
    SEMICOLON       reduce using rule 16 (factor -> MINUS factor .)
    OR              reduce using rule 16 (factor -> MINUS factor .)
    COMMA           reduce using rule 16 (factor -> MINUS factor .)


state 39

    (17) factor -> PLUS factor .

    AND             reduce using rule 17 (factor -> PLUS factor .)
    SEMICOLON       reduce using rule 17 (factor -> PLUS factor .)
    OR              reduce using rule 17 (factor -> PLUS factor .)
    COMMA           reduce using rule 17 (factor -> PLUS factor .)


state 40

    (18) factor -> LPAREN INTEGER . RPAREN

    RPAREN          shift and go to state 47


state 41

    (19) factor -> LPAREN FLOAT . RPAREN

    RPAREN          shift and go to state 48


state 42

    (20) factor -> LPAREN MINUS . FLOAT RPAREN

    FLOAT           shift and go to state 49


state 43

    (28) factor -> NOT ID .

    AND             reduce using rule 28 (factor -> NOT ID .)
    SEMICOLON       reduce using rule 28 (factor -> NOT ID .)
    OR              reduce using rule 28 (factor -> NOT ID .)
    COMMA           reduce using rule 28 (factor -> NOT ID .)


state 44

    (2) statement -> CONST type ID EQUALS expression . SEMICOLON
    (21) expression -> expression . OR term

    SEMICOLON       shift and go to state 50
    OR              shift and go to state 36


state 45

    (21) expression -> expression OR term .
    (23) term -> term . AND factor

    SEMICOLON       reduce using rule 21 (expression -> expression OR term .)
    OR              reduce using rule 21 (expression -> expression OR term .)
    COMMA           reduce using rule 21 (expression -> expression OR term .)
    AND             shift and go to state 37


state 46

    (23) term -> term AND factor .

    AND             reduce using rule 23 (term -> term AND factor .)
    SEMICOLON       reduce using rule 23 (term -> term AND factor .)
    OR              reduce using rule 23 (term -> term AND factor .)
    COMMA           reduce using rule 23 (term -> term AND factor .)


state 47

    (18) factor -> LPAREN INTEGER RPAREN .

    AND             reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    SEMICOLON       reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    OR              reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)
    COMMA           reduce using rule 18 (factor -> LPAREN INTEGER RPAREN .)


state 48

    (19) factor -> LPAREN FLOAT RPAREN .

    AND             reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    SEMICOLON       reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    OR              reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)
    COMMA           reduce using rule 19 (factor -> LPAREN FLOAT RPAREN .)


state 49

    (20) factor -> LPAREN MINUS FLOAT . RPAREN

    RPAREN          shift and go to state 51


state 50

    (2) statement -> CONST type ID EQUALS expression SEMICOLON .

    $end            reduce using rule 2 (statement -> CONST type ID EQUALS expression SEMICOLON .)


state 51

    (20) factor -> LPAREN MINUS FLOAT RPAREN .

    AND             reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    SEMICOLON       reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    OR              reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)
    COMMA           reduce using rule 20 (factor -> LPAREN MINUS FLOAT RPAREN .)

