
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOL_TYPE CHAR CHAR_TYPE COLON COMMA COMMENT CONST DECLARATION DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_TYPE FOR GT GTE ID IF INSTRUCTION INTEGER INT_TYPE LBRACKET LPAREN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RBRACKET READ RPAREN SEMICOLON TRUE VAR_GLOBAL WRITEstatement : type declaration_list SEMICOLON\n                 | CONST type ID EQUALS expression SEMICOLONdeclaration_list : declaration\n                        | declaration COMMA declaration_listdeclaration : ID\n                   | ID EQUALS expressionstatement : ID EQUALS expression SEMICOLONtype : INT_TYPE\n            | FLOAT_TYPE\n            | BOOL_TYPE\n            | CHAR_TYPEfactor : INTEGER\n              | FLOAT\n              | CHAR\n              | BOOL\n              | MINUS factor\n              | PLUS factor\n              | LPAREN INTEGER RPAREN\n              | LPAREN FLOAT RPAREN\n              | LPAREN MINUS FLOAT RPAREN\n              statements : statement\n                  | statement statements statement : simple_assignment\n                 | array_declarationTab\n                 | array_assignment\n                 | type declarationTab_listTab SEMICOLON\n                 | const_declarationTabsimple_assignment : ID EQUALS expressionTab SEMICOLONconst_declarationTab : CONST type ID EQUALS expressionTab SEMICOLONarray_declarationTab : type ID LBRACKET INTEGER RBRACKET SEMICOLONdeclarationTab_listTab : declarationTab\n                        | declarationTab COMMA declarationTab_listTabdeclarationTab : ID\n                   | ID EQUALS expressionTab\n                   | ID LBRACKET INTEGER RBRACKETexpressionTab : ID\n                  | FLOAT\n                  | INTEGER\n                  | CHARfactor : ID LBRACKET expressionTab RBRACKETarray_assignment : ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLONexpression : expression OR term\n                  | termterm : term AND factor \n            | factorfactor : ID\n              | TRUE\n              | FALSE\n              | NOT IDstatement : READ LPAREN ID RPAREN SEMICOLON\n                 | READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLONstatement : WRITE LPAREN write_content RPAREN SEMICOLONwrite_content : write_itemwrite_content : write_content COMMA write_itemwrite_item : ID\n                  | ID LBRACKET INTEGER RBRACKET'
    
_lr_action_items = {'CONST':([0,],[3,]),'ID':([0,2,11,12,13,14,20,21,22,23,24,28,29,30,41,42,46,63,64,66,68,83,86,87,97,],[4,17,-8,-9,-10,-11,31,32,47,52,55,32,60,62,73,73,78,32,47,73,73,55,73,47,47,]),'READ':([0,],[9,]),'WRITE':([0,],[10,]),'INT_TYPE':([0,3,],[11,11,]),'FLOAT_TYPE':([0,3,],[12,12,]),'BOOL_TYPE':([0,3,],[13,13,]),'CHAR_TYPE':([0,3,],[14,14,]),'$end':([1,5,6,7,8,25,26,65,67,98,100,103,105,106,113,115,],[0,-23,-24,-25,-27,-1,-26,-7,-28,-50,-52,-30,-2,-29,-41,-51,]),'EQUALS':([4,17,31,60,62,79,],[21,28,63,86,87,97,]),'LBRACKET':([4,17,32,52,55,62,73,],[22,27,64,81,84,88,64,]),'LPAREN':([9,10,21,28,41,42,63,66,68,86,],[23,24,43,43,43,43,43,43,43,43,]),'SEMICOLON':([15,16,17,18,19,32,33,34,35,36,37,38,39,40,44,45,47,49,50,51,57,58,59,60,61,62,69,70,71,72,73,74,78,80,82,85,89,90,92,93,94,95,107,108,109,112,114,],[25,26,-5,-3,-31,-36,65,67,-43,-13,-12,-14,-45,-15,-47,-48,-36,-37,-38,-39,-6,-34,-4,-5,-32,-33,-16,-12,-13,-14,-46,-17,-49,98,100,103,105,106,-42,-44,-18,-19,-40,-20,113,-35,115,]),'COMMA':([17,18,19,32,35,36,37,38,39,40,44,45,47,49,50,51,53,54,55,57,58,60,62,69,70,71,72,73,74,78,85,92,93,94,95,101,107,108,111,112,],[-5,29,30,-36,-43,-13,-12,-14,-45,-15,-47,-48,-36,-37,-38,-39,83,-53,-55,-6,-34,-5,-33,-16,-12,-13,-14,-46,-17,-49,-35,-42,-44,-18,-19,-54,-40,-20,-56,-35,]),'FLOAT':([21,22,28,41,42,43,63,64,66,68,77,86,87,97,],[36,49,36,71,71,76,36,49,71,71,96,71,49,49,]),'INTEGER':([21,22,27,28,41,42,43,63,64,66,68,81,84,86,87,88,97,],[37,50,56,37,70,70,75,37,50,70,70,99,102,70,50,104,50,]),'CHAR':([21,22,28,41,42,63,64,66,68,86,87,97,],[38,51,38,72,72,38,51,72,72,72,51,51,]),'BOOL':([21,28,41,42,63,66,68,86,],[40,40,40,40,40,40,40,40,]),'MINUS':([21,28,41,42,43,63,66,68,86,],[41,41,41,41,77,41,41,41,41,]),'PLUS':([21,28,41,42,63,66,68,86,],[42,42,42,42,42,42,42,42,]),'TRUE':([21,28,41,42,63,66,68,86,],[44,44,44,44,44,44,44,44,]),'FALSE':([21,28,41,42,63,66,68,86,],[45,45,45,45,45,45,45,45,]),'NOT':([21,28,41,42,63,66,68,86,],[46,46,46,46,46,46,46,46,]),'AND':([32,35,36,37,38,39,40,44,45,69,70,71,72,73,74,78,92,93,94,95,107,108,],[-46,68,-13,-12,-14,-45,-15,-47,-48,-16,-12,-13,-14,-46,-17,-49,68,-44,-18,-19,-40,-20,]),'OR':([32,33,35,36,37,38,39,40,44,45,57,69,70,71,72,73,74,78,89,92,93,94,95,107,108,],[-46,66,-43,-13,-12,-14,-45,-15,-47,-48,66,-16,-12,-13,-14,-46,-17,-49,66,-42,-44,-18,-19,-40,-20,]),'RBRACKET':([47,48,49,50,51,56,91,99,102,104,],[-36,79,-37,-38,-39,85,107,110,111,112,]),'RPAREN':([52,53,54,55,75,76,96,101,110,111,],[80,82,-53,-55,94,95,108,-54,114,-56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'type':([0,3,],[2,20,]),'simple_assignment':([0,],[5,]),'array_declarationTab':([0,],[6,]),'array_assignment':([0,],[7,]),'const_declarationTab':([0,],[8,]),'declaration_list':([2,29,],[15,59,]),'declarationTab_listTab':([2,30,],[16,61,]),'declaration':([2,29,],[18,18,]),'declarationTab':([2,30,],[19,19,]),'expression':([21,28,63,86,],[33,57,89,57,]),'expressionTab':([21,22,28,63,64,87,97,],[34,48,58,90,91,58,109,]),'term':([21,28,63,66,86,],[35,35,35,92,35,]),'factor':([21,28,41,42,63,66,68,86,],[39,39,69,74,39,39,93,39,]),'write_content':([24,],[53,]),'write_item':([24,83,],[54,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> type declaration_list SEMICOLON','statement',3,'p_statement_declaration','main.py',181),
  ('statement -> CONST type ID EQUALS expression SEMICOLON','statement',6,'p_statement_declaration','main.py',182),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','main.py',220),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','main.py',221),
  ('declaration -> ID','declaration',1,'p_declaration','main.py',231),
  ('declaration -> ID EQUALS expression','declaration',3,'p_declaration','main.py',232),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','main.py',243),
  ('type -> INT_TYPE','type',1,'p_type','main.py',252),
  ('type -> FLOAT_TYPE','type',1,'p_type','main.py',253),
  ('type -> BOOL_TYPE','type',1,'p_type','main.py',254),
  ('type -> CHAR_TYPE','type',1,'p_type','main.py',255),
  ('factor -> INTEGER','factor',1,'p_factor_number','main.py',259),
  ('factor -> FLOAT','factor',1,'p_factor_number','main.py',260),
  ('factor -> CHAR','factor',1,'p_factor_number','main.py',261),
  ('factor -> BOOL','factor',1,'p_factor_number','main.py',262),
  ('factor -> MINUS factor','factor',2,'p_factor_number','main.py',263),
  ('factor -> PLUS factor','factor',2,'p_factor_number','main.py',264),
  ('factor -> LPAREN INTEGER RPAREN','factor',3,'p_factor_number','main.py',265),
  ('factor -> LPAREN FLOAT RPAREN','factor',3,'p_factor_number','main.py',266),
  ('factor -> LPAREN MINUS FLOAT RPAREN','factor',4,'p_factor_number','main.py',267),
  ('statements -> statement','statements',1,'p_statements','main.py',288),
  ('statements -> statement statements','statements',2,'p_statements','main.py',289),
  ('statement -> simple_assignment','statement',1,'p_statement','main.py',296),
  ('statement -> array_declarationTab','statement',1,'p_statement','main.py',297),
  ('statement -> array_assignment','statement',1,'p_statement','main.py',298),
  ('statement -> type declarationTab_listTab SEMICOLON','statement',3,'p_statement','main.py',299),
  ('statement -> const_declarationTab','statement',1,'p_statement','main.py',300),
  ('simple_assignment -> ID EQUALS expressionTab SEMICOLON','simple_assignment',4,'p_simple_assignment','main.py',303),
  ('const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON','const_declarationTab',6,'p_const_declarationTab','main.py',318),
  ('array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON','array_declarationTab',6,'p_array_declarationTab','main.py',324),
  ('declarationTab_listTab -> declarationTab','declarationTab_listTab',1,'p_declarationTab_listTab','main.py',337),
  ('declarationTab_listTab -> declarationTab COMMA declarationTab_listTab','declarationTab_listTab',3,'p_declarationTab_listTab','main.py',338),
  ('declarationTab -> ID','declarationTab',1,'p_declarationTab','main.py',345),
  ('declarationTab -> ID EQUALS expressionTab','declarationTab',3,'p_declarationTab','main.py',346),
  ('declarationTab -> ID LBRACKET INTEGER RBRACKET','declarationTab',4,'p_declarationTab','main.py',347),
  ('expressionTab -> ID','expressionTab',1,'p_expressionTab','main.py',360),
  ('expressionTab -> FLOAT','expressionTab',1,'p_expressionTab','main.py',361),
  ('expressionTab -> INTEGER','expressionTab',1,'p_expressionTab','main.py',362),
  ('expressionTab -> CHAR','expressionTab',1,'p_expressionTab','main.py',363),
  ('factor -> ID LBRACKET expressionTab RBRACKET','factor',4,'p_array_access','main.py',368),
  ('array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON','array_assignment',7,'p_array_assignment','main.py',390),
  ('expression -> expression OR term','expression',3,'p_expression_el','main.py',447),
  ('expression -> term','expression',1,'p_expression_el','main.py',448),
  ('term -> term AND factor','term',3,'p_term_tl','main.py',468),
  ('term -> factor','term',1,'p_term_tl','main.py',469),
  ('factor -> ID','factor',1,'p_factor_fl','main.py',485),
  ('factor -> TRUE','factor',1,'p_factor_fl','main.py',486),
  ('factor -> FALSE','factor',1,'p_factor_fl','main.py',487),
  ('factor -> NOT ID','factor',2,'p_factor_fl','main.py',488),
  ('statement -> READ LPAREN ID RPAREN SEMICOLON','statement',5,'p_read_statement','main.py',602),
  ('statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON','statement',8,'p_read_statement','main.py',603),
  ('statement -> WRITE LPAREN write_content RPAREN SEMICOLON','statement',5,'p_write_statement','main.py',673),
  ('write_content -> write_item','write_content',1,'p_write_content_single','main.py',683),
  ('write_content -> write_content COMMA write_item','write_content',3,'p_write_content_multiple','main.py',687),
  ('write_item -> ID','write_item',1,'p_write_item','main.py',691),
  ('write_item -> ID LBRACKET INTEGER RBRACKET','write_item',4,'p_write_item','main.py',692),
]
