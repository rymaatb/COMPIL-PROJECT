
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOL_TYPE CHAR CHAR_TYPE COLON COMMA COMMENT CONST DECLARATION DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_TYPE FOR GT GTE ID IF INSTRUCTION INTEGER INT_TYPE LBRACKET LPAREN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RBRACKET READ RPAREN SEMICOLON TRUE VAR_GLOBAL WRITEstatement : type declaration_list SEMICOLON\n| CONST type ID EQUALS expression SEMICOLONdeclaration_list : declaration\n| declaration COMMA declaration_listdeclaration : ID\n| ID EQUALS expressionstatement : ID EQUALS expression SEMICOLONtype : INT_TYPE\n| FLOAT_TYPE\n| BOOL_TYPE\n| CHAR_TYPEfactor : INTEGER\n| FLOAT\n| CHAR\n| BOOL\n| MINUS factor\n| PLUS factor\n| LPAREN INTEGER RPAREN\n| LPAREN FLOAT RPAREN\n| LPAREN MINUS FLOAT RPAREN\nstatements : statement\n| statement statements statement :  array_declarationTab\n\n| array_assignment\n| type declarationTab_listTab SEMICOLON\n| const_declarationTabconst_declarationTab : CONST type ID EQUALS expressionTab SEMICOLONarray_declarationTab : type ID LBRACKET INTEGER RBRACKET SEMICOLONdeclarationTab_listTab : declarationTab\n| declarationTab COMMA declarationTab_listTabdeclarationTab : ID\n| ID EQUALS expressionTab\n| ID LBRACKET INTEGER RBRACKETexpressionTab : ID\n| FLOAT\n| INTEGER\n| CHARfactor : ID LBRACKET expression RBRACKETarray_assignment : ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLONexpression : expression OR term\n| termterm : term AND factor \n| factorfactor : ID\n| TRUE\n| FALSE\n| NOT IDstatement : READ LPAREN ID RPAREN SEMICOLON\n| READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLONstatement : WRITE LPAREN write_content RPAREN SEMICOLONwrite_content : write_itemwrite_content : write_content COMMA write_itemwrite_item : ID\n| ID LBRACKET INTEGER RBRACKET'
    
_lr_action_items = {'CONST':([0,],[3,]),'ID':([0,2,10,11,12,13,19,20,21,22,23,27,28,29,39,40,44,65,66,68,69,80,83,84,94,],[4,16,-8,-9,-10,-11,30,31,45,50,53,55,62,64,31,31,75,55,31,31,31,53,31,45,45,]),'READ':([0,],[8,]),'WRITE':([0,],[9,]),'INT_TYPE':([0,3,],[10,10,]),'FLOAT_TYPE':([0,3,],[11,11,]),'BOOL_TYPE':([0,3,],[12,12,]),'CHAR_TYPE':([0,3,],[13,13,]),'$end':([1,5,6,7,24,25,67,95,97,100,102,103,110,112,],[0,-23,-24,-26,-1,-25,-7,-48,-50,-28,-2,-27,-39,-49,]),'EQUALS':([4,16,30,62,64,76,],[20,27,65,83,84,94,]),'LBRACKET':([4,16,31,50,53,55,64,],[21,26,66,78,81,66,85,]),'LPAREN':([8,9,20,27,39,40,65,66,68,69,83,],[22,23,41,41,41,41,41,41,41,41,41,]),'SEMICOLON':([14,15,16,17,18,31,32,33,34,35,36,37,38,42,43,45,47,48,49,55,56,57,58,59,60,61,62,63,64,70,71,75,77,79,82,86,87,89,90,91,92,104,105,106,109,111,],[24,25,-5,-3,-29,-44,67,-41,-43,-12,-13,-14,-15,-45,-46,-34,-35,-36,-37,-34,-6,-32,-13,-12,-14,-4,-5,-30,-31,-16,-17,-47,95,97,100,102,103,-40,-42,-18,-19,-38,-20,110,-33,112,]),'COMMA':([16,17,18,31,33,34,35,36,37,38,42,43,45,47,48,49,51,52,53,55,56,57,58,59,60,62,64,70,71,75,82,89,90,91,92,98,104,105,108,109,],[-5,28,29,-44,-41,-43,-12,-13,-14,-15,-45,-46,-34,-35,-36,-37,80,-51,-53,-34,-6,-32,-13,-12,-14,-5,-31,-16,-17,-47,-33,-40,-42,-18,-19,-52,-38,-20,-54,-33,]),'INTEGER':([20,21,26,27,39,40,41,65,66,68,69,78,81,83,84,85,94,],[35,48,54,59,35,35,72,59,35,35,35,96,99,35,48,101,48,]),'FLOAT':([20,21,27,39,40,41,65,66,68,69,74,83,84,94,],[36,47,58,36,36,73,58,36,36,36,93,36,47,47,]),'CHAR':([20,21,27,39,40,65,66,68,69,83,84,94,],[37,49,60,37,37,60,37,37,37,37,49,49,]),'BOOL':([20,27,39,40,65,66,68,69,83,],[38,38,38,38,38,38,38,38,38,]),'MINUS':([20,27,39,40,41,65,66,68,69,83,],[39,39,39,39,74,39,39,39,39,39,]),'PLUS':([20,27,39,40,65,66,68,69,83,],[40,40,40,40,40,40,40,40,40,]),'TRUE':([20,27,39,40,65,66,68,69,83,],[42,42,42,42,42,42,42,42,42,]),'FALSE':([20,27,39,40,65,66,68,69,83,],[43,43,43,43,43,43,43,43,43,]),'NOT':([20,27,39,40,65,66,68,69,83,],[44,44,44,44,44,44,44,44,44,]),'AND':([31,33,34,35,36,37,38,42,43,55,58,59,60,70,71,75,89,90,91,92,104,105,],[-44,69,-43,-12,-13,-14,-15,-45,-46,-44,-13,-12,-14,-16,-17,-47,69,-42,-18,-19,-38,-20,]),'OR':([31,32,33,34,35,36,37,38,42,43,55,56,58,59,60,70,71,75,86,88,89,90,91,92,104,105,],[-44,68,-41,-43,-12,-13,-14,-15,-45,-46,-44,68,-13,-12,-14,-16,-17,-47,68,68,-40,-42,-18,-19,-38,-20,]),'RBRACKET':([31,33,34,35,36,37,38,42,43,45,46,47,48,49,54,70,71,75,88,89,90,91,92,96,99,101,104,105,],[-44,-41,-43,-12,-13,-14,-15,-45,-46,-34,76,-35,-36,-37,82,-16,-17,-47,104,-40,-42,-18,-19,107,108,109,-38,-20,]),'RPAREN':([50,51,52,53,72,73,93,98,107,108,],[77,79,-51,-53,91,92,105,-52,111,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'type':([0,3,],[2,19,]),'array_declarationTab':([0,],[5,]),'array_assignment':([0,],[6,]),'const_declarationTab':([0,],[7,]),'declaration_list':([2,28,],[14,61,]),'declarationTab_listTab':([2,29,],[15,63,]),'declaration':([2,28,],[17,17,]),'declarationTab':([2,29,],[18,18,]),'expression':([20,27,65,66,83,],[32,56,86,88,56,]),'term':([20,27,65,66,68,83,],[33,33,33,33,89,33,]),'factor':([20,27,39,40,65,66,68,69,83,],[34,34,70,71,34,34,34,90,34,]),'expressionTab':([21,27,65,84,94,],[46,57,87,57,106,]),'write_content':([23,],[51,]),'write_item':([23,80,],[52,98,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> type declaration_list SEMICOLON','statement',3,'p_statement_declaration','main.py',181),
  ('statement -> CONST type ID EQUALS expression SEMICOLON','statement',6,'p_statement_declaration','main.py',182),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','main.py',237),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','main.py',238),
  ('declaration -> ID','declaration',1,'p_declaration','main.py',248),
  ('declaration -> ID EQUALS expression','declaration',3,'p_declaration','main.py',249),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','main.py',260),
  ('type -> INT_TYPE','type',1,'p_type','main.py',268),
  ('type -> FLOAT_TYPE','type',1,'p_type','main.py',269),
  ('type -> BOOL_TYPE','type',1,'p_type','main.py',270),
  ('type -> CHAR_TYPE','type',1,'p_type','main.py',271),
  ('factor -> INTEGER','factor',1,'p_factor_number','main.py',275),
  ('factor -> FLOAT','factor',1,'p_factor_number','main.py',276),
  ('factor -> CHAR','factor',1,'p_factor_number','main.py',277),
  ('factor -> BOOL','factor',1,'p_factor_number','main.py',278),
  ('factor -> MINUS factor','factor',2,'p_factor_number','main.py',279),
  ('factor -> PLUS factor','factor',2,'p_factor_number','main.py',280),
  ('factor -> LPAREN INTEGER RPAREN','factor',3,'p_factor_number','main.py',281),
  ('factor -> LPAREN FLOAT RPAREN','factor',3,'p_factor_number','main.py',282),
  ('factor -> LPAREN MINUS FLOAT RPAREN','factor',4,'p_factor_number','main.py',283),
  ('statements -> statement','statements',1,'p_statements','main.py',304),
  ('statements -> statement statements','statements',2,'p_statements','main.py',305),
  ('statement -> array_declarationTab','statement',1,'p_statement','main.py',312),
  ('statement -> array_assignment','statement',1,'p_statement','main.py',314),
  ('statement -> type declarationTab_listTab SEMICOLON','statement',3,'p_statement','main.py',315),
  ('statement -> const_declarationTab','statement',1,'p_statement','main.py',316),
  ('const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON','const_declarationTab',6,'p_const_declarationTab','main.py',319),
  ('array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON','array_declarationTab',6,'p_array_declarationTab','main.py',325),
  ('declarationTab_listTab -> declarationTab','declarationTab_listTab',1,'p_declarationTab_listTab','main.py',338),
  ('declarationTab_listTab -> declarationTab COMMA declarationTab_listTab','declarationTab_listTab',3,'p_declarationTab_listTab','main.py',339),
  ('declarationTab -> ID','declarationTab',1,'p_declarationTab','main.py',346),
  ('declarationTab -> ID EQUALS expressionTab','declarationTab',3,'p_declarationTab','main.py',347),
  ('declarationTab -> ID LBRACKET INTEGER RBRACKET','declarationTab',4,'p_declarationTab','main.py',348),
  ('expressionTab -> ID','expressionTab',1,'p_expressionTab','main.py',361),
  ('expressionTab -> FLOAT','expressionTab',1,'p_expressionTab','main.py',362),
  ('expressionTab -> INTEGER','expressionTab',1,'p_expressionTab','main.py',363),
  ('expressionTab -> CHAR','expressionTab',1,'p_expressionTab','main.py',364),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_array_access','main.py',371),
  ('array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON','array_assignment',7,'p_array_assignment','main.py',390),
  ('expression -> expression OR term','expression',3,'p_expression_el','main.py',447),
  ('expression -> term','expression',1,'p_expression_el','main.py',448),
  ('term -> term AND factor','term',3,'p_term_tl','main.py',468),
  ('term -> factor','term',1,'p_term_tl','main.py',469),
  ('factor -> ID','factor',1,'p_factor_fl','main.py',485),
  ('factor -> TRUE','factor',1,'p_factor_fl','main.py',486),
  ('factor -> FALSE','factor',1,'p_factor_fl','main.py',487),
  ('factor -> NOT ID','factor',2,'p_factor_fl','main.py',488),
  ('statement -> READ LPAREN ID RPAREN SEMICOLON','statement',5,'p_read_statement','main.py',602),
  ('statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON','statement',8,'p_read_statement','main.py',603),
  ('statement -> WRITE LPAREN write_content RPAREN SEMICOLON','statement',5,'p_write_statement','main.py',673),
  ('write_content -> write_item','write_content',1,'p_write_content_single','main.py',678),
  ('write_content -> write_content COMMA write_item','write_content',3,'p_write_content_multiple','main.py',682),
  ('write_item -> ID','write_item',1,'p_write_item','main.py',686),
  ('write_item -> ID LBRACKET INTEGER RBRACKET','write_item',4,'p_write_item','main.py',687),
]
