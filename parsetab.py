
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOL_TYPE CHAR CHAR_TYPE COLON COMMA COMMENT CONST DECLARATION DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_TYPE FOR GT GTE ID IF INSTRUCTION INTEGER INT_TYPE LBRACKET LPAREN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RBRACKET READ RPAREN SEMICOLON TRUE VAR_GLOBAL WRITEstatement : type declaration_list SEMICOLON\n| CONST type ID EQUALS expression SEMICOLONdeclaration_list : declaration\n| declaration COMMA declaration_listdeclaration : ID\n| ID EQUALS expressionstatement : ID EQUALS expression SEMICOLONtype : INT_TYPE\n| FLOAT_TYPE\n| BOOL_TYPE\n| CHAR_TYPEfactor : INTEGER\n| FLOAT\n| CHAR\n| BOOL\n| MINUS factor\n| PLUS factor\n| LPAREN INTEGER RPAREN\n| LPAREN FLOAT RPAREN\n| LPAREN MINUS FLOAT RPAREN\nstatements : statement\n| statement statements statement : array_declarationTab \n\n  | declaration_assignment \n| array_assignment\n| type declarationTab_listTab SEMICOLON\n| const_declarationTabconst_declarationTab : CONST type ID EQUALS expressionTab SEMICOLONarray_declarationTab : type ID LBRACKET INTEGER RBRACKET SEMICOLONdeclarationTab_listTab : declarationTab\n| declarationTab COMMA declarationTab_listTabdeclarationTab : ID\n| ID EQUALS expressionTab\n| ID LBRACKET INTEGER RBRACKETexpressionTab : ID\n| FLOAT\n| INTEGER\n| CHARfactor : ID LBRACKET expression RBRACKETarray_assignment : ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLONdeclaration_assignment : type ID EQUALS expression SEMICOLONexpression : expression OR term\n| termterm : term AND factor \n| factorfactor : ID\n| TRUE\n| FALSE\n| NOT IDstatement : READ LPAREN ID RPAREN SEMICOLON\n| READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLONstatement : WRITE LPAREN write_content RPAREN SEMICOLONwrite_content : write_itemwrite_content : write_content COMMA write_itemwrite_item : ID\n| ID LBRACKET INTEGER RBRACKET'
    
_lr_action_items = {'CONST':([0,],[3,]),'ID':([0,2,11,12,13,14,20,21,22,23,24,28,29,30,40,41,45,66,67,69,70,81,85,86,96,],[4,17,-8,-9,-10,-11,31,32,46,51,54,56,63,65,32,32,76,56,32,32,32,54,32,46,46,]),'READ':([0,],[9,]),'WRITE':([0,],[10,]),'INT_TYPE':([0,3,],[11,11,]),'FLOAT_TYPE':([0,3,],[12,12,]),'BOOL_TYPE':([0,3,],[13,13,]),'CHAR_TYPE':([0,3,],[14,14,]),'$end':([1,5,6,7,8,25,26,68,84,97,99,102,105,106,113,115,],[0,-23,-24,-25,-27,-1,-26,-7,-41,-50,-52,-29,-2,-28,-40,-51,]),'EQUALS':([4,17,31,63,65,77,],[21,28,66,85,86,96,]),'LBRACKET':([4,17,32,51,54,56,65,],[22,27,67,79,82,67,87,]),'LPAREN':([9,10,21,28,40,41,66,67,69,70,85,],[23,24,42,42,42,42,42,42,42,42,42,]),'SEMICOLON':([15,16,17,18,19,32,33,34,35,36,37,38,39,43,44,46,48,49,50,56,57,58,59,60,61,62,63,64,65,71,72,76,78,80,83,88,89,91,92,93,94,103,107,108,109,112,114,],[25,26,-5,-3,-30,-46,68,-43,-45,-12,-13,-14,-15,-47,-48,-35,-36,-37,-38,-35,84,-33,-13,-12,-14,-4,-5,-31,-32,-16,-17,-49,97,99,102,105,106,-42,-44,-18,-19,-6,-39,-20,113,-34,115,]),'COMMA':([17,18,19,32,34,35,36,37,38,39,43,44,46,48,49,50,52,53,54,56,57,58,59,60,61,63,65,71,72,76,83,91,92,93,94,100,103,107,108,111,112,],[-5,29,30,-46,-43,-45,-12,-13,-14,-15,-47,-48,-35,-36,-37,-38,81,-53,-55,-35,-6,-33,-13,-12,-14,-5,-32,-16,-17,-49,-34,-42,-44,-18,-19,-54,-6,-39,-20,-56,-34,]),'INTEGER':([21,22,27,28,40,41,42,66,67,69,70,79,82,85,86,87,96,],[36,49,55,60,36,36,73,60,36,36,36,98,101,36,49,104,49,]),'FLOAT':([21,22,28,40,41,42,66,67,69,70,75,85,86,96,],[37,48,59,37,37,74,59,37,37,37,95,37,48,48,]),'CHAR':([21,22,28,40,41,66,67,69,70,85,86,96,],[38,50,61,38,38,61,38,38,38,38,50,50,]),'BOOL':([21,28,40,41,66,67,69,70,85,],[39,39,39,39,39,39,39,39,39,]),'MINUS':([21,28,40,41,42,66,67,69,70,85,],[40,40,40,40,75,40,40,40,40,40,]),'PLUS':([21,28,40,41,66,67,69,70,85,],[41,41,41,41,41,41,41,41,41,]),'TRUE':([21,28,40,41,66,67,69,70,85,],[43,43,43,43,43,43,43,43,43,]),'FALSE':([21,28,40,41,66,67,69,70,85,],[44,44,44,44,44,44,44,44,44,]),'NOT':([21,28,40,41,66,67,69,70,85,],[45,45,45,45,45,45,45,45,45,]),'AND':([32,34,35,36,37,38,39,43,44,56,59,60,61,71,72,76,91,92,93,94,107,108,],[-46,70,-45,-12,-13,-14,-15,-47,-48,-46,-13,-12,-14,-16,-17,-49,70,-44,-18,-19,-39,-20,]),'OR':([32,33,34,35,36,37,38,39,43,44,56,57,59,60,61,71,72,76,88,90,91,92,93,94,103,107,108,],[-46,69,-43,-45,-12,-13,-14,-15,-47,-48,-46,69,-13,-12,-14,-16,-17,-49,69,69,-42,-44,-18,-19,69,-39,-20,]),'RBRACKET':([32,34,35,36,37,38,39,43,44,46,47,48,49,50,55,71,72,76,90,91,92,93,94,98,101,104,107,108,],[-46,-43,-45,-12,-13,-14,-15,-47,-48,-35,77,-36,-37,-38,83,-16,-17,-49,107,-42,-44,-18,-19,110,111,112,-39,-20,]),'RPAREN':([51,52,53,54,73,74,95,100,110,111,],[78,80,-53,-55,93,94,108,-54,114,-56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'type':([0,3,],[2,20,]),'array_declarationTab':([0,],[5,]),'declaration_assignment':([0,],[6,]),'array_assignment':([0,],[7,]),'const_declarationTab':([0,],[8,]),'declaration_list':([2,29,],[15,62,]),'declarationTab_listTab':([2,30,],[16,64,]),'declaration':([2,29,],[18,18,]),'declarationTab':([2,30,],[19,19,]),'expression':([21,28,66,67,85,],[33,57,88,90,103,]),'term':([21,28,66,67,69,85,],[34,34,34,34,91,34,]),'factor':([21,28,40,41,66,67,69,70,85,],[35,35,71,72,35,35,35,92,35,]),'expressionTab':([22,28,66,86,96,],[47,58,89,58,109,]),'write_content':([24,],[52,]),'write_item':([24,81,],[53,100,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> type declaration_list SEMICOLON','statement',3,'p_statement_declaration','main.py',181),
  ('statement -> CONST type ID EQUALS expression SEMICOLON','statement',6,'p_statement_declaration','main.py',182),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','main.py',220),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','main.py',221),
  ('declaration -> ID','declaration',1,'p_declaration','main.py',231),
  ('declaration -> ID EQUALS expression','declaration',3,'p_declaration','main.py',232),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','main.py',243),
  ('type -> INT_TYPE','type',1,'p_type','main.py',252),
  ('type -> FLOAT_TYPE','type',1,'p_type','main.py',253),
  ('type -> BOOL_TYPE','type',1,'p_type','main.py',254),
  ('type -> CHAR_TYPE','type',1,'p_type','main.py',255),
  ('factor -> INTEGER','factor',1,'p_factor_number','main.py',259),
  ('factor -> FLOAT','factor',1,'p_factor_number','main.py',260),
  ('factor -> CHAR','factor',1,'p_factor_number','main.py',261),
  ('factor -> BOOL','factor',1,'p_factor_number','main.py',262),
  ('factor -> MINUS factor','factor',2,'p_factor_number','main.py',263),
  ('factor -> PLUS factor','factor',2,'p_factor_number','main.py',264),
  ('factor -> LPAREN INTEGER RPAREN','factor',3,'p_factor_number','main.py',265),
  ('factor -> LPAREN FLOAT RPAREN','factor',3,'p_factor_number','main.py',266),
  ('factor -> LPAREN MINUS FLOAT RPAREN','factor',4,'p_factor_number','main.py',267),
  ('statements -> statement','statements',1,'p_statements','main.py',288),
  ('statements -> statement statements','statements',2,'p_statements','main.py',289),
  ('statement -> array_declarationTab','statement',1,'p_statement','main.py',296),
  ('statement -> declaration_assignment','statement',1,'p_statement','main.py',298),
  ('statement -> array_assignment','statement',1,'p_statement','main.py',299),
  ('statement -> type declarationTab_listTab SEMICOLON','statement',3,'p_statement','main.py',300),
  ('statement -> const_declarationTab','statement',1,'p_statement','main.py',301),
  ('const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON','const_declarationTab',6,'p_const_declarationTab','main.py',304),
  ('array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON','array_declarationTab',6,'p_array_declarationTab','main.py',310),
  ('declarationTab_listTab -> declarationTab','declarationTab_listTab',1,'p_declarationTab_listTab','main.py',323),
  ('declarationTab_listTab -> declarationTab COMMA declarationTab_listTab','declarationTab_listTab',3,'p_declarationTab_listTab','main.py',324),
  ('declarationTab -> ID','declarationTab',1,'p_declarationTab','main.py',331),
  ('declarationTab -> ID EQUALS expressionTab','declarationTab',3,'p_declarationTab','main.py',332),
  ('declarationTab -> ID LBRACKET INTEGER RBRACKET','declarationTab',4,'p_declarationTab','main.py',333),
  ('expressionTab -> ID','expressionTab',1,'p_expressionTab','main.py',346),
  ('expressionTab -> FLOAT','expressionTab',1,'p_expressionTab','main.py',347),
  ('expressionTab -> INTEGER','expressionTab',1,'p_expressionTab','main.py',348),
  ('expressionTab -> CHAR','expressionTab',1,'p_expressionTab','main.py',349),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_array_access','main.py',356),
  ('array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON','array_assignment',7,'p_array_assignment','main.py',375),
  ('declaration_assignment -> type ID EQUALS expression SEMICOLON','declaration_assignment',5,'p_declaration_assignment','main.py',402),
  ('expression -> expression OR term','expression',3,'p_expression_el','main.py',462),
  ('expression -> term','expression',1,'p_expression_el','main.py',463),
  ('term -> term AND factor','term',3,'p_term_tl','main.py',483),
  ('term -> factor','term',1,'p_term_tl','main.py',484),
  ('factor -> ID','factor',1,'p_factor_fl','main.py',500),
  ('factor -> TRUE','factor',1,'p_factor_fl','main.py',501),
  ('factor -> FALSE','factor',1,'p_factor_fl','main.py',502),
  ('factor -> NOT ID','factor',2,'p_factor_fl','main.py',503),
  ('statement -> READ LPAREN ID RPAREN SEMICOLON','statement',5,'p_read_statement','main.py',617),
  ('statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON','statement',8,'p_read_statement','main.py',618),
  ('statement -> WRITE LPAREN write_content RPAREN SEMICOLON','statement',5,'p_write_statement','main.py',688),
  ('write_content -> write_item','write_content',1,'p_write_content_single','main.py',693),
  ('write_content -> write_content COMMA write_item','write_content',3,'p_write_content_multiple','main.py',697),
  ('write_item -> ID','write_item',1,'p_write_item','main.py',701),
  ('write_item -> ID LBRACKET INTEGER RBRACKET','write_item',4,'p_write_item','main.py',702),
]
