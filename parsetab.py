
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOL_TYPE CHAR CHAR_TYPE COLON COMMA COMMENT CONST DECLARATION DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_TYPE FOR GT GTE ID IF INSTRUCTION INTEGER INT_TYPE LBRACE LBRACKET LPAREN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RBRACE RBRACKET READ RPAREN SEMICOLON TRUE VAR_GLOBAL WRITEPROGRAMME : varGlobal declaration_ instructionvarGlobal : VAR_GLOBAL LBRACE declarations RBRACE declaration_ : DECLARATION LBRACE declarations RBRACEinstruction : INSTRUCTION LBRACE statements RBRACEdeclarations : declaration declarations\n                    | declarationdeclaration : type declaration_list SEMICOLON\n                   | CONST type ID EQUALS expression SEMICOLONdeclaration_list : declaration\n                        | declaration COMMA declaration_listdeclaration : ID\n                   | ID EQUALS expressionstatement : ID EQUALS expression SEMICOLONtype : INT_TYPE\n            | FLOAT_TYPE\n            | BOOL_TYPE\n            | CHAR_TYPEfactor : INTEGER\n              | FLOAT\n              | CHAR\n              | BOOL\n              | MINUS factor\n              | PLUS factor\n              | LPAREN INTEGER RPAREN\n              | LPAREN FLOAT RPAREN\n              | LPAREN MINUS FLOAT RPAREN\n              statements : statement\n                  | statement statements statement : simple_assignment\n                 | array_assignment\n                 declaration : array_declarationTab\n                 | type declarationTab_listTab SEMICOLON\n                 | const_declarationTabsimple_assignment : ID EQUALS expressionTab SEMICOLONconst_declarationTab : CONST type ID EQUALS expressionTab SEMICOLONarray_declarationTab : type ID LBRACKET INTEGER RBRACKET SEMICOLONdeclarationTab_listTab : declarationTab\n                        | declarationTab COMMA declarationTab_listTabdeclarationTab : ID\n                   | ID EQUALS expressionTab\n                   | ID LBRACKET INTEGER RBRACKETexpressionTab : ID\n                  | FLOAT\n                  | INTEGER\n                  | CHARfactor : ID LBRACKET expressionTab RBRACKETarray_assignment : ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLONexpression : expression OR term\n                  | termterm : term AND factor \n            | factorfactor : ID\n              | TRUE\n              | FALSE\n              | NOT IDstatement : type ID EQUALS expression_arithmetique SEMICOLONstatement :  ID EQUALS expression_arithmetique SEMICOLONexpression_arithmetique : expression_arithmetique PLUS term_arithmetique  \n    expression_arithmetique : expression_arithmetique MINUS term_arithmetiqueexpression_arithmetique : term_arithmetiqueterm_arithmetique : term_arithmetique MULTIPLY term_arithmetiqueterm_arithmetique : term_arithmetique DIVIDE factor_arithmetiqueterm_arithmetique : factor_arithmetiquefactor_arithmetique : ID\n                        | INTEGER\n                        | FLOAT\n                        factor_arithmetique : LPAREN expression_arithmetique RPARENstatement : READ LPAREN ID RPAREN SEMICOLON\n                 | READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLONstatement : WRITE LPAREN write_content RPAREN SEMICOLONwrite_content : write_itemwrite_content : write_content COMMA write_itemwrite_item : ID\n                  | ID LBRACKET INTEGER RBRACKETstatement : FOR LPAREN initialisation COLON step COLON BorneSup RPAREN block initialisation : ID EQUALS INTEGERstep : INTEGER\n            | IDBorneSup : IDblock : LBRACE statements RBRACE'
    
_lr_action_items = {'VAR_GLOBAL':([0,],[3,]),'$end':([1,7,63,],[0,-1,-4,]),'DECLARATION':([2,23,],[5,-2,]),'LBRACE':([3,5,8,177,],[6,9,21,179,]),'INSTRUCTION':([4,41,],[8,-3,]),'CONST':([6,9,11,12,14,15,16,17,18,19,20,42,43,46,49,50,51,52,53,54,55,56,60,61,84,85,89,117,118,119,120,145,147,148,149,150,],[13,13,13,13,-11,-31,-33,-14,-15,-16,-17,-7,-32,13,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-22,-23,-55,-48,-50,-24,-25,-36,-8,-35,-46,-26,]),'ID':([6,9,11,12,14,15,16,17,18,19,20,21,30,31,33,35,36,37,42,43,45,46,47,49,50,51,52,53,54,55,56,57,58,60,61,62,65,66,68,69,70,80,81,82,83,84,85,89,98,104,112,117,118,119,120,122,123,124,125,126,127,128,129,141,143,145,147,148,149,150,156,157,158,160,171,172,176,178,179,181,],[14,14,14,27,-11,-31,-33,-14,-15,-16,-17,34,48,49,34,-29,-30,67,-7,-32,72,14,79,-52,-12,-49,-51,-18,-19,-20,-21,49,49,-53,-54,89,90,99,105,108,110,72,99,49,49,-22,-23,-55,133,133,99,-48,-50,-24,-25,-13,-57,133,133,-34,133,133,133,108,165,-36,-8,-35,-46,-26,99,-56,-68,-70,175,-47,-69,-75,34,-80,]),'INT_TYPE':([6,9,11,12,13,14,15,16,17,18,19,20,21,33,35,36,42,43,46,49,50,51,52,53,54,55,56,60,61,84,85,89,117,118,119,120,122,123,126,145,147,148,149,150,157,158,160,172,176,178,179,181,],[17,17,17,17,17,-11,-31,-33,-14,-15,-16,-17,17,17,-29,-30,-7,-32,17,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-22,-23,-55,-48,-50,-24,-25,-13,-57,-34,-36,-8,-35,-46,-26,-56,-68,-70,-47,-69,-75,17,-80,]),'FLOAT_TYPE':([6,9,11,12,13,14,15,16,17,18,19,20,21,33,35,36,42,43,46,49,50,51,52,53,54,55,56,60,61,84,85,89,117,118,119,120,122,123,126,145,147,148,149,150,157,158,160,172,176,178,179,181,],[18,18,18,18,18,-11,-31,-33,-14,-15,-16,-17,18,18,-29,-30,-7,-32,18,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-22,-23,-55,-48,-50,-24,-25,-13,-57,-34,-36,-8,-35,-46,-26,-56,-68,-70,-47,-69,-75,18,-80,]),'BOOL_TYPE':([6,9,11,12,13,14,15,16,17,18,19,20,21,33,35,36,42,43,46,49,50,51,52,53,54,55,56,60,61,84,85,89,117,118,119,120,122,123,126,145,147,148,149,150,157,158,160,172,176,178,179,181,],[19,19,19,19,19,-11,-31,-33,-14,-15,-16,-17,19,19,-29,-30,-7,-32,19,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-22,-23,-55,-48,-50,-24,-25,-13,-57,-34,-36,-8,-35,-46,-26,-56,-68,-70,-47,-69,-75,19,-80,]),'CHAR_TYPE':([6,9,11,12,13,14,15,16,17,18,19,20,21,33,35,36,42,43,46,49,50,51,52,53,54,55,56,60,61,84,85,89,117,118,119,120,122,123,126,145,147,148,149,150,157,158,160,172,176,178,179,181,],[20,20,20,20,20,-11,-31,-33,-14,-15,-16,-17,20,20,-29,-30,-7,-32,20,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-22,-23,-55,-48,-50,-24,-25,-13,-57,-34,-36,-8,-35,-46,-26,-56,-68,-70,-47,-69,-75,20,-80,]),'RBRACE':([10,11,14,15,16,22,24,32,33,35,36,42,43,49,50,51,52,53,54,55,56,60,61,64,84,85,89,117,118,119,120,122,123,126,145,147,148,149,150,157,158,160,172,176,178,180,181,],[23,-6,-11,-31,-33,41,-5,63,-27,-29,-30,-7,-32,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-28,-22,-23,-55,-48,-50,-24,-25,-13,-57,-34,-36,-8,-35,-46,-26,-56,-68,-70,-47,-69,-75,181,-80,]),'COMMA':([14,15,16,27,28,29,42,43,49,50,51,52,53,54,55,56,60,61,72,73,74,75,76,79,84,85,89,99,101,102,103,106,107,108,111,117,118,119,120,145,147,148,149,150,161,167,170,],[-11,-31,-33,-11,46,47,-7,-32,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-42,-40,-19,-18,-20,-39,-22,-23,-55,-42,-43,-44,-45,141,-71,-73,-41,-48,-50,-24,-25,-36,-8,-35,-46,-26,-72,-41,-74,]),'SEMICOLON':([14,15,16,25,26,27,28,29,42,43,49,50,51,52,53,54,55,56,60,61,72,73,74,75,76,77,78,79,84,85,89,90,91,92,93,94,95,96,97,99,101,102,103,111,114,115,117,118,119,120,133,135,136,137,138,140,145,147,148,149,150,151,152,153,154,155,167,168,173,],[-11,-31,-33,42,43,-11,-9,-37,-7,-32,-52,-12,-49,-51,-18,-19,-20,-21,-53,-54,-42,-40,-19,-18,-20,-10,-38,-39,-22,-23,-55,-42,122,123,126,-60,-19,-18,-63,-42,-43,-44,-45,145,147,148,-48,-50,-24,-25,-64,157,-65,-66,158,160,-36,-8,-35,-46,-26,-58,-59,-61,-62,-67,-41,172,176,]),'EQUALS':([14,27,34,48,67,79,110,134,],[31,45,65,80,104,112,144,156,]),'READ':([21,33,35,36,122,123,126,157,158,160,172,176,178,179,181,],[38,38,-29,-30,-13,-57,-34,-56,-68,-70,-47,-69,-75,38,-80,]),'WRITE':([21,33,35,36,122,123,126,157,158,160,172,176,178,179,181,],[39,39,-29,-30,-13,-57,-34,-56,-68,-70,-47,-69,-75,39,-80,]),'FOR':([21,33,35,36,122,123,126,157,158,160,172,176,178,179,181,],[40,40,-29,-30,-13,-57,-34,-56,-68,-70,-47,-69,-75,40,-80,]),'LBRACKET':([27,34,49,72,79,90,105,108,],[44,66,81,81,113,81,139,142,]),'INTEGER':([31,44,45,57,58,59,65,66,80,81,82,83,98,104,112,113,124,125,127,128,129,139,142,143,144,156,],[53,71,75,53,53,86,96,102,75,102,53,53,130,136,102,146,136,136,136,136,136,159,162,164,166,102,]),'FLOAT':([31,45,57,58,59,65,66,80,81,82,83,88,98,104,112,124,125,127,128,129,156,],[54,74,54,54,87,95,101,74,101,54,54,121,131,137,101,137,137,137,137,137,101,]),'CHAR':([31,45,57,58,65,66,80,81,82,83,112,156,],[55,76,55,55,76,103,76,103,55,55,103,103,]),'BOOL':([31,45,57,58,65,80,82,83,],[56,56,56,56,56,56,56,56,]),'MINUS':([31,45,57,58,59,65,80,82,83,90,92,94,95,96,97,98,130,131,132,133,135,136,137,151,152,153,154,155,],[57,57,57,57,88,57,57,57,57,-64,125,-60,-66,-65,-63,88,-65,-66,125,-64,125,-65,-66,-58,-59,-61,-62,-67,]),'PLUS':([31,45,57,58,65,80,82,83,90,92,94,95,96,97,130,131,132,133,135,136,137,151,152,153,154,155,],[58,58,58,58,58,58,58,58,-64,124,-60,-66,-65,-63,-65,-66,124,-64,124,-65,-66,-58,-59,-61,-62,-67,]),'LPAREN':([31,38,39,40,45,57,58,65,80,82,83,98,104,124,125,127,128,129,],[59,68,69,70,59,59,59,98,59,59,59,129,129,129,129,129,129,129,]),'TRUE':([31,45,57,58,65,80,82,83,],[60,60,60,60,60,60,60,60,]),'FALSE':([31,45,57,58,65,80,82,83,],[61,61,61,61,61,61,61,61,]),'NOT':([31,45,57,58,65,80,82,83,],[62,62,62,62,62,62,62,62,]),'AND':([49,51,52,53,54,55,56,60,61,72,74,75,76,84,85,89,90,95,96,117,118,119,120,149,150,],[-52,83,-51,-18,-19,-20,-21,-53,-54,-52,-19,-18,-20,-22,-23,-55,-52,-19,-18,83,-50,-24,-25,-46,-26,]),'OR':([49,50,51,52,53,54,55,56,60,61,72,74,75,76,84,85,89,90,91,95,96,114,117,118,119,120,149,150,],[-52,82,-49,-51,-18,-19,-20,-21,-53,-54,-52,-19,-18,-20,-22,-23,-55,-52,82,-19,-18,82,-48,-50,-24,-25,-46,-26,]),'RBRACKET':([71,99,100,101,102,103,116,146,159,162,],[111,-42,134,-43,-44,-45,149,167,169,170,]),'RPAREN':([86,87,94,97,105,106,107,108,121,130,131,132,133,136,137,151,152,153,154,155,161,169,170,174,175,],[119,120,-60,-63,138,140,-71,-73,150,119,120,155,-64,-65,-66,-58,-59,-61,-62,-67,-72,173,-74,177,-79,]),'MULTIPLY':([90,94,95,96,97,130,131,133,136,137,151,152,153,154,155,],[-64,127,-66,-65,-63,-65,-66,-64,-65,-66,127,127,127,-62,-67,]),'DIVIDE':([90,94,95,96,97,130,131,133,136,137,151,152,153,154,155,],[-64,128,-66,-65,-63,-65,-66,-64,-65,-66,128,128,128,-62,-67,]),'COLON':([109,163,164,165,166,],[143,171,-77,-78,-76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMME':([0,],[1,]),'varGlobal':([0,],[2,]),'declaration_':([2,],[4,]),'instruction':([4,],[7,]),'declarations':([6,9,11,],[10,22,24,]),'declaration':([6,9,11,12,46,],[11,11,11,28,28,]),'type':([6,9,11,12,13,21,33,46,179,],[12,12,12,12,30,37,37,12,37,]),'array_declarationTab':([6,9,11,12,46,],[15,15,15,15,15,]),'const_declarationTab':([6,9,11,12,46,],[16,16,16,16,16,]),'declaration_list':([12,46,],[25,77,]),'declarationTab_listTab':([12,47,],[26,78,]),'declarationTab':([12,47,],[29,29,]),'statements':([21,33,179,],[32,64,180,]),'statement':([21,33,179,],[33,33,33,]),'simple_assignment':([21,33,179,],[35,35,35,]),'array_assignment':([21,33,179,],[36,36,36,]),'expression':([31,45,65,80,],[50,50,91,114,]),'term':([31,45,65,80,82,],[51,51,51,51,117,]),'factor':([31,45,57,58,65,80,82,83,],[52,52,84,85,52,52,52,118,]),'expressionTab':([45,65,66,80,81,112,156,],[73,93,100,115,116,73,168,]),'expression_arithmetique':([65,98,104,129,],[92,132,135,132,]),'term_arithmetique':([65,98,104,124,125,127,129,],[94,94,94,151,152,153,94,]),'factor_arithmetique':([65,98,104,124,125,127,128,129,],[97,97,97,97,97,97,154,97,]),'write_content':([69,],[106,]),'write_item':([69,141,],[107,161,]),'initialisation':([70,],[109,]),'step':([143,],[163,]),'BorneSup':([171,],[174,]),'block':([177,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMME","S'",1,None,None,None),
  ('PROGRAMME -> varGlobal declaration_ instruction','PROGRAMME',3,'p_PROGRAMME','parser.py',107),
  ('varGlobal -> VAR_GLOBAL LBRACE declarations RBRACE','varGlobal',4,'p_varGlobal','parser.py',110),
  ('declaration_ -> DECLARATION LBRACE declarations RBRACE','declaration_',4,'p_declaration_','parser.py',113),
  ('instruction -> INSTRUCTION LBRACE statements RBRACE','instruction',4,'p_instruction','parser.py',116),
  ('declarations -> declaration declarations','declarations',2,'p_declarations','parser.py',119),
  ('declarations -> declaration','declarations',1,'p_declarations','parser.py',120),
  ('declaration -> type declaration_list SEMICOLON','declaration',3,'p_statement_declaration','parser.py',128),
  ('declaration -> CONST type ID EQUALS expression SEMICOLON','declaration',6,'p_statement_declaration','parser.py',129),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',170),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','parser.py',171),
  ('declaration -> ID','declaration',1,'p_declaration','parser.py',181),
  ('declaration -> ID EQUALS expression','declaration',3,'p_declaration','parser.py',182),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','parser.py',194),
  ('type -> INT_TYPE','type',1,'p_type','parser.py',211),
  ('type -> FLOAT_TYPE','type',1,'p_type','parser.py',212),
  ('type -> BOOL_TYPE','type',1,'p_type','parser.py',213),
  ('type -> CHAR_TYPE','type',1,'p_type','parser.py',214),
  ('factor -> INTEGER','factor',1,'p_factor_number','parser.py',218),
  ('factor -> FLOAT','factor',1,'p_factor_number','parser.py',219),
  ('factor -> CHAR','factor',1,'p_factor_number','parser.py',220),
  ('factor -> BOOL','factor',1,'p_factor_number','parser.py',221),
  ('factor -> MINUS factor','factor',2,'p_factor_number','parser.py',222),
  ('factor -> PLUS factor','factor',2,'p_factor_number','parser.py',223),
  ('factor -> LPAREN INTEGER RPAREN','factor',3,'p_factor_number','parser.py',224),
  ('factor -> LPAREN FLOAT RPAREN','factor',3,'p_factor_number','parser.py',225),
  ('factor -> LPAREN MINUS FLOAT RPAREN','factor',4,'p_factor_number','parser.py',226),
  ('statements -> statement','statements',1,'p_statements','parser.py',247),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',248),
  ('statement -> simple_assignment','statement',1,'p_statement','parser.py',255),
  ('statement -> array_assignment','statement',1,'p_statement','parser.py',256),
  ('declaration -> array_declarationTab','declaration',1,'p_declaration_t','parser.py',259),
  ('declaration -> type declarationTab_listTab SEMICOLON','declaration',3,'p_declaration_t','parser.py',260),
  ('declaration -> const_declarationTab','declaration',1,'p_declaration_t','parser.py',261),
  ('simple_assignment -> ID EQUALS expressionTab SEMICOLON','simple_assignment',4,'p_simple_assignment','parser.py',264),
  ('const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON','const_declarationTab',6,'p_const_declarationTab','parser.py',280),
  ('array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON','array_declarationTab',6,'p_array_declarationTab','parser.py',287),
  ('declarationTab_listTab -> declarationTab','declarationTab_listTab',1,'p_declarationTab_listTab','parser.py',300),
  ('declarationTab_listTab -> declarationTab COMMA declarationTab_listTab','declarationTab_listTab',3,'p_declarationTab_listTab','parser.py',301),
  ('declarationTab -> ID','declarationTab',1,'p_declarationTab','parser.py',308),
  ('declarationTab -> ID EQUALS expressionTab','declarationTab',3,'p_declarationTab','parser.py',309),
  ('declarationTab -> ID LBRACKET INTEGER RBRACKET','declarationTab',4,'p_declarationTab','parser.py',310),
  ('expressionTab -> ID','expressionTab',1,'p_expressionTab','parser.py',323),
  ('expressionTab -> FLOAT','expressionTab',1,'p_expressionTab','parser.py',324),
  ('expressionTab -> INTEGER','expressionTab',1,'p_expressionTab','parser.py',325),
  ('expressionTab -> CHAR','expressionTab',1,'p_expressionTab','parser.py',326),
  ('factor -> ID LBRACKET expressionTab RBRACKET','factor',4,'p_array_access','parser.py',331),
  ('array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON','array_assignment',7,'p_array_assignment','parser.py',358),
  ('expression -> expression OR term','expression',3,'p_expression_el','parser.py',416),
  ('expression -> term','expression',1,'p_expression_el','parser.py',417),
  ('term -> term AND factor','term',3,'p_term_tl','parser.py',434),
  ('term -> factor','term',1,'p_term_tl','parser.py',435),
  ('factor -> ID','factor',1,'p_factor_fl','parser.py',455),
  ('factor -> TRUE','factor',1,'p_factor_fl','parser.py',456),
  ('factor -> FALSE','factor',1,'p_factor_fl','parser.py',457),
  ('factor -> NOT ID','factor',2,'p_factor_fl','parser.py',458),
  ('statement -> type ID EQUALS expression_arithmetique SEMICOLON','statement',5,'p_statement_assignmentArth','parser.py',596),
  ('statement -> ID EQUALS expression_arithmetique SEMICOLON','statement',4,'p_declarationArth','parser.py',601),
  ('expression_arithmetique -> expression_arithmetique PLUS term_arithmetique','expression_arithmetique',3,'p_expression_plus','parser.py',607),
  ('expression_arithmetique -> expression_arithmetique MINUS term_arithmetique','expression_arithmetique',3,'p_expression_minus','parser.py',612),
  ('expression_arithmetique -> term_arithmetique','expression_arithmetique',1,'p_expression_term','parser.py',616),
  ('term_arithmetique -> term_arithmetique MULTIPLY term_arithmetique','term_arithmetique',3,'p_term_multiply','parser.py',620),
  ('term_arithmetique -> term_arithmetique DIVIDE factor_arithmetique','term_arithmetique',3,'p_term_divide','parser.py',625),
  ('term_arithmetique -> factor_arithmetique','term_arithmetique',1,'p_term_factor','parser.py',629),
  ('factor_arithmetique -> ID','factor_arithmetique',1,'p_factor_id','parser.py',633),
  ('factor_arithmetique -> INTEGER','factor_arithmetique',1,'p_factor_id','parser.py',634),
  ('factor_arithmetique -> FLOAT','factor_arithmetique',1,'p_factor_id','parser.py',635),
  ('factor_arithmetique -> LPAREN expression_arithmetique RPAREN','factor_arithmetique',3,'p_factor_parens','parser.py',640),
  ('statement -> READ LPAREN ID RPAREN SEMICOLON','statement',5,'p_read_statement','parser.py',745),
  ('statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON','statement',8,'p_read_statement','parser.py',746),
  ('statement -> WRITE LPAREN write_content RPAREN SEMICOLON','statement',5,'p_write_statement','parser.py',822),
  ('write_content -> write_item','write_content',1,'p_write_content_single','parser.py',827),
  ('write_content -> write_content COMMA write_item','write_content',3,'p_write_content_multiple','parser.py',831),
  ('write_item -> ID','write_item',1,'p_write_item','parser.py',835),
  ('write_item -> ID LBRACKET INTEGER RBRACKET','write_item',4,'p_write_item','parser.py',836),
  ('statement -> FOR LPAREN initialisation COLON step COLON BorneSup RPAREN block','statement',9,'p_statement_FORloop','parser.py',874),
  ('initialisation -> ID EQUALS INTEGER','initialisation',3,'p_initialisation','parser.py',880),
  ('step -> INTEGER','step',1,'p_step','parser.py',889),
  ('step -> ID','step',1,'p_step','parser.py',890),
  ('BorneSup -> ID','BorneSup',1,'p_BorneSup','parser.py',898),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','parser.py',903),
]
