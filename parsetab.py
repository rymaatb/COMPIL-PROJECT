
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BOOL_TYPE CHAR CHAR_TYPE COLON COMMA COMMENT CONST DECLARATION DIVIDE ELSE EQ EQUALS FALSE FLOAT FLOAT_TYPE FOR GT GTE ID IF INSTRUCTION INTEGER INT_TYPE LBRACKET LPAREN LT LTE MINUS MULTIPLY NEQ NOT NUMBER OR PLUS RBRACKET READ RPAREN SEMICOLON TRUE VAR_GLOBAL WRITEstatement : type declaration_list SEMICOLON\n| CONST type ID EQUALS expression SEMICOLONdeclaration_list : declaration\n| declaration COMMA declaration_listdeclaration : ID\n| ID EQUALS expressionstatement : ID EQUALS expression SEMICOLONtype : INT_TYPE\n| FLOAT_TYPE\n| BOOL_TYPE\n| CHAR_TYPEfactor : INTEGER\n| FLOAT\n| CHAR\n| BOOL\n| MINUS factor\n| PLUS factor\n| LPAREN INTEGER RPAREN\n| LPAREN FLOAT RPAREN\n| LPAREN MINUS FLOAT RPAREN\nstatements : statement\n| statement statements statement : simple_assignment\n| array_declarationTab\n  | declaration_assignment \n| array_assignment\n| type declarationTab_listTab SEMICOLON\n| const_declarationTabconst_declarationTab : CONST type ID EQUALS expressionTab SEMICOLONarray_declarationTab : type ID LBRACKET INTEGER RBRACKET SEMICOLONdeclarationTab_listTab : declarationTab\n| declarationTab COMMA declarationTab_listTabdeclarationTab : ID\n| ID EQUALS expressionTab\n| ID LBRACKET INTEGER RBRACKETexpressionTab : ID\n| FLOAT\n| INTEGER\n| CHARfactor : ID LBRACKET expression RBRACKETarray_assignment : ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLONdeclaration_assignment : type ID EQUALS expression SEMICOLONsimple_assignment : ID EQUALS expression SEMICOLONexpression : expression OR term\n| termterm : term AND factor \n| factorfactor : ID\n| TRUE\n| FALSE\n| NOT IDstatement : READ LPAREN ID RPAREN SEMICOLON\n| READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLONstatement : WRITE LPAREN write_content RPAREN SEMICOLONwrite_content : write_itemwrite_content : write_content COMMA write_itemwrite_item : ID\n| ID LBRACKET INTEGER RBRACKET'
    
_lr_action_items = {'CONST':([0,],[3,]),'ID':([0,2,12,13,14,15,21,22,23,24,25,29,30,31,41,42,46,67,68,70,71,82,86,87,97,],[4,18,-8,-9,-10,-11,32,33,47,52,55,57,64,66,33,33,77,57,33,33,33,55,33,47,47,]),'READ':([0,],[10,]),'WRITE':([0,],[11,]),'INT_TYPE':([0,3,],[12,12,]),'FLOAT_TYPE':([0,3,],[13,13,]),'BOOL_TYPE':([0,3,],[14,14,]),'CHAR_TYPE':([0,3,],[15,15,]),'$end':([1,5,6,7,8,9,26,27,69,85,98,100,103,106,107,114,116,],[0,-23,-24,-25,-26,-28,-1,-27,-7,-42,-52,-54,-30,-2,-29,-41,-53,]),'EQUALS':([4,18,32,64,66,78,],[22,29,67,86,87,97,]),'LBRACKET':([4,18,33,52,55,57,66,],[23,28,68,80,83,68,88,]),'LPAREN':([10,11,22,29,41,42,67,68,70,71,86,],[24,25,43,43,43,43,43,43,43,43,43,]),'SEMICOLON':([16,17,18,19,20,33,34,35,36,37,38,39,40,44,45,47,49,50,51,57,58,59,60,61,62,63,64,65,66,72,73,77,79,81,84,89,90,92,93,94,95,104,108,109,110,113,115,],[26,27,-5,-3,-31,-48,69,-45,-47,-12,-13,-14,-15,-49,-50,-36,-37,-38,-39,-36,85,-34,-13,-12,-14,-4,-5,-32,-33,-16,-17,-51,98,100,103,106,107,-44,-46,-18,-19,-6,-40,-20,114,-35,116,]),'COMMA':([18,19,20,33,35,36,37,38,39,40,44,45,47,49,50,51,53,54,55,57,58,59,60,61,62,64,66,72,73,77,84,92,93,94,95,101,104,108,109,112,113,],[-5,30,31,-48,-45,-47,-12,-13,-14,-15,-49,-50,-36,-37,-38,-39,82,-55,-57,-36,-6,-34,-13,-12,-14,-5,-33,-16,-17,-51,-35,-44,-46,-18,-19,-56,-6,-40,-20,-58,-35,]),'INTEGER':([22,23,28,29,41,42,43,67,68,70,71,80,83,86,87,88,97,],[37,50,56,61,37,37,74,61,37,37,37,99,102,37,50,105,50,]),'FLOAT':([22,23,29,41,42,43,67,68,70,71,76,86,87,97,],[38,49,60,38,38,75,60,38,38,38,96,38,49,49,]),'CHAR':([22,23,29,41,42,67,68,70,71,86,87,97,],[39,51,62,39,39,62,39,39,39,39,51,51,]),'BOOL':([22,29,41,42,67,68,70,71,86,],[40,40,40,40,40,40,40,40,40,]),'MINUS':([22,29,41,42,43,67,68,70,71,86,],[41,41,41,41,76,41,41,41,41,41,]),'PLUS':([22,29,41,42,67,68,70,71,86,],[42,42,42,42,42,42,42,42,42,]),'TRUE':([22,29,41,42,67,68,70,71,86,],[44,44,44,44,44,44,44,44,44,]),'FALSE':([22,29,41,42,67,68,70,71,86,],[45,45,45,45,45,45,45,45,45,]),'NOT':([22,29,41,42,67,68,70,71,86,],[46,46,46,46,46,46,46,46,46,]),'AND':([33,35,36,37,38,39,40,44,45,57,60,61,62,72,73,77,92,93,94,95,108,109,],[-48,71,-47,-12,-13,-14,-15,-49,-50,-48,-13,-12,-14,-16,-17,-51,71,-46,-18,-19,-40,-20,]),'OR':([33,34,35,36,37,38,39,40,44,45,57,58,60,61,62,72,73,77,89,91,92,93,94,95,104,108,109,],[-48,70,-45,-47,-12,-13,-14,-15,-49,-50,-48,70,-13,-12,-14,-16,-17,-51,70,70,-44,-46,-18,-19,70,-40,-20,]),'RBRACKET':([33,35,36,37,38,39,40,44,45,47,48,49,50,51,56,72,73,77,91,92,93,94,95,99,102,105,108,109,],[-48,-45,-47,-12,-13,-14,-15,-49,-50,-36,78,-37,-38,-39,84,-16,-17,-51,108,-44,-46,-18,-19,111,112,113,-40,-20,]),'RPAREN':([52,53,54,55,74,75,96,101,111,112,],[79,81,-55,-57,94,95,109,-56,115,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'type':([0,3,],[2,21,]),'simple_assignment':([0,],[5,]),'array_declarationTab':([0,],[6,]),'declaration_assignment':([0,],[7,]),'array_assignment':([0,],[8,]),'const_declarationTab':([0,],[9,]),'declaration_list':([2,30,],[16,63,]),'declarationTab_listTab':([2,31,],[17,65,]),'declaration':([2,30,],[19,19,]),'declarationTab':([2,31,],[20,20,]),'expression':([22,29,67,68,86,],[34,58,89,91,104,]),'term':([22,29,67,68,70,86,],[35,35,35,35,92,35,]),'factor':([22,29,41,42,67,68,70,71,86,],[36,36,72,73,36,36,36,93,36,]),'expressionTab':([23,29,67,87,97,],[48,59,90,59,110,]),'write_content':([25,],[53,]),'write_item':([25,82,],[54,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> type declaration_list SEMICOLON','statement',3,'p_statement_declaration','main.py',181),
  ('statement -> CONST type ID EQUALS expression SEMICOLON','statement',6,'p_statement_declaration','main.py',182),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','main.py',220),
  ('declaration_list -> declaration COMMA declaration_list','declaration_list',3,'p_declaration_list','main.py',221),
  ('declaration -> ID','declaration',1,'p_declaration','main.py',231),
  ('declaration -> ID EQUALS expression','declaration',3,'p_declaration','main.py',232),
  ('statement -> ID EQUALS expression SEMICOLON','statement',4,'p_statement_assignment','main.py',243),
  ('type -> INT_TYPE','type',1,'p_type','main.py',252),
  ('type -> FLOAT_TYPE','type',1,'p_type','main.py',253),
  ('type -> BOOL_TYPE','type',1,'p_type','main.py',254),
  ('type -> CHAR_TYPE','type',1,'p_type','main.py',255),
  ('factor -> INTEGER','factor',1,'p_factor_number','main.py',259),
  ('factor -> FLOAT','factor',1,'p_factor_number','main.py',260),
  ('factor -> CHAR','factor',1,'p_factor_number','main.py',261),
  ('factor -> BOOL','factor',1,'p_factor_number','main.py',262),
  ('factor -> MINUS factor','factor',2,'p_factor_number','main.py',263),
  ('factor -> PLUS factor','factor',2,'p_factor_number','main.py',264),
  ('factor -> LPAREN INTEGER RPAREN','factor',3,'p_factor_number','main.py',265),
  ('factor -> LPAREN FLOAT RPAREN','factor',3,'p_factor_number','main.py',266),
  ('factor -> LPAREN MINUS FLOAT RPAREN','factor',4,'p_factor_number','main.py',267),
  ('statements -> statement','statements',1,'p_statements','main.py',288),
  ('statements -> statement statements','statements',2,'p_statements','main.py',289),
  ('statement -> simple_assignment','statement',1,'p_statement','main.py',296),
  ('statement -> array_declarationTab','statement',1,'p_statement','main.py',297),
  ('statement -> declaration_assignment','statement',1,'p_statement','main.py',298),
  ('statement -> array_assignment','statement',1,'p_statement','main.py',299),
  ('statement -> type declarationTab_listTab SEMICOLON','statement',3,'p_statement','main.py',300),
  ('statement -> const_declarationTab','statement',1,'p_statement','main.py',301),
  ('const_declarationTab -> CONST type ID EQUALS expressionTab SEMICOLON','const_declarationTab',6,'p_const_declarationTab','main.py',304),
  ('array_declarationTab -> type ID LBRACKET INTEGER RBRACKET SEMICOLON','array_declarationTab',6,'p_array_declarationTab','main.py',310),
  ('declarationTab_listTab -> declarationTab','declarationTab_listTab',1,'p_declarationTab_listTab','main.py',323),
  ('declarationTab_listTab -> declarationTab COMMA declarationTab_listTab','declarationTab_listTab',3,'p_declarationTab_listTab','main.py',324),
  ('declarationTab -> ID','declarationTab',1,'p_declarationTab','main.py',331),
  ('declarationTab -> ID EQUALS expressionTab','declarationTab',3,'p_declarationTab','main.py',332),
  ('declarationTab -> ID LBRACKET INTEGER RBRACKET','declarationTab',4,'p_declarationTab','main.py',333),
  ('expressionTab -> ID','expressionTab',1,'p_expressionTab','main.py',346),
  ('expressionTab -> FLOAT','expressionTab',1,'p_expressionTab','main.py',347),
  ('expressionTab -> INTEGER','expressionTab',1,'p_expressionTab','main.py',348),
  ('expressionTab -> CHAR','expressionTab',1,'p_expressionTab','main.py',349),
  ('factor -> ID LBRACKET expression RBRACKET','factor',4,'p_array_access','main.py',356),
  ('array_assignment -> ID LBRACKET expressionTab RBRACKET EQUALS expressionTab SEMICOLON','array_assignment',7,'p_array_assignment','main.py',375),
  ('declaration_assignment -> type ID EQUALS expression SEMICOLON','declaration_assignment',5,'p_declaration_assignment','main.py',402),
  ('simple_assignment -> ID EQUALS expression SEMICOLON','simple_assignment',4,'p_variable_assignment','main.py',432),
  ('expression -> expression OR term','expression',3,'p_expression_el','main.py',491),
  ('expression -> term','expression',1,'p_expression_el','main.py',492),
  ('term -> term AND factor','term',3,'p_term_tl','main.py',512),
  ('term -> factor','term',1,'p_term_tl','main.py',513),
  ('factor -> ID','factor',1,'p_factor_fl','main.py',529),
  ('factor -> TRUE','factor',1,'p_factor_fl','main.py',530),
  ('factor -> FALSE','factor',1,'p_factor_fl','main.py',531),
  ('factor -> NOT ID','factor',2,'p_factor_fl','main.py',532),
  ('statement -> READ LPAREN ID RPAREN SEMICOLON','statement',5,'p_read_statement','main.py',646),
  ('statement -> READ LPAREN ID LBRACKET INTEGER RBRACKET RPAREN SEMICOLON','statement',8,'p_read_statement','main.py',647),
  ('statement -> WRITE LPAREN write_content RPAREN SEMICOLON','statement',5,'p_write_statement','main.py',717),
  ('write_content -> write_item','write_content',1,'p_write_content_single','main.py',722),
  ('write_content -> write_content COMMA write_item','write_content',3,'p_write_content_multiple','main.py',726),
  ('write_item -> ID','write_item',1,'p_write_item','main.py',730),
  ('write_item -> ID LBRACKET INTEGER RBRACKET','write_item',4,'p_write_item','main.py',731),
]
