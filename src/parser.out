Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NUMBER

Grammar

Rule 0     S' -> statements
Rule 1     statements -> statement
Rule 2     statements -> statement statements
Rule 3     statement -> simple_assignment
Rule 4     statement -> array_declaration
Rule 5     statement -> declaration_assignment
Rule 6     statement -> array_assignment
Rule 7     statement -> type declaration_list SEMICOLON
Rule 8     statement -> const_declaration
Rule 9     const_declaration -> CONST type ID EQUALS expression SEMICOLON
Rule 10    array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON
Rule 11    declaration_list -> declaration
Rule 12    declaration_list -> declaration COMMA declaration_list
Rule 13    declaration -> ID
Rule 14    declaration -> ID EQUALS expression
Rule 15    declaration -> ID LBRACKET INTEGER RBRACKET
Rule 16    expression -> ID
Rule 17    expression -> FLOAT
Rule 18    expression -> INTEGER
Rule 19    expression -> CHAR
Rule 20    type -> INT_TYPE
Rule 21    type -> FLOAT_TYPE
Rule 22    type -> BOOL_TYPE
Rule 23    type -> CHAR_TYPE
Rule 24    expression -> term
Rule 25    term -> factor
Rule 26    factor -> INTEGER
Rule 27    expression -> expression OR expression
Rule 28    expression -> expression AND expression
Rule 29    expression -> expression EQ expression
Rule 30    expression -> expression NEQ expression
Rule 31    expression -> expression LT expression
Rule 32    expression -> expression GT expression
Rule 33    expression -> expression LTE expression
Rule 34    expression -> expression GTE expression
Rule 35    expression -> NOT expression
Rule 36    comparison -> LPAREN expression RPAREN
Rule 37    comparison -> INTEGER
Rule 38    factor -> comparison
Rule 39    factor -> ID
Rule 40    factor -> ID LBRACKET expression RBRACKET
Rule 41    simple_assignment -> ID EQUALS expression SEMICOLON
Rule 42    array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
Rule 43    declaration_assignment -> type ID EQUALS expression SEMICOLON

Terminals, with rules where they appear

AND                  : 28
BOOL_TYPE            : 22
CHAR                 : 19
CHAR_TYPE            : 23
COMMA                : 12
CONST                : 9
EQ                   : 29
EQUALS               : 9 14 41 42 43
FLOAT                : 17
FLOAT_TYPE           : 21
GT                   : 32
GTE                  : 34
ID                   : 9 10 13 14 15 16 39 40 41 42 43
INTEGER              : 10 15 18 26 37
INT_TYPE             : 20
LBRACKET             : 10 15 40 42
LPAREN               : 36
LT                   : 31
LTE                  : 33
NEQ                  : 30
NOT                  : 35
NUMBER               : 
OR                   : 27
RBRACKET             : 10 15 40 42
RPAREN               : 36
SEMICOLON            : 7 9 10 41 42 43
error                : 

Nonterminals, with rules where they appear

array_assignment     : 6
array_declaration    : 4
comparison           : 38
const_declaration    : 8
declaration          : 11 12
declaration_assignment : 5
declaration_list     : 7 12
expression           : 9 14 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 36 40 41 42 42 43
factor               : 25
simple_assignment    : 3
statement            : 1 2
statements           : 2 0
term                 : 24
type                 : 7 9 10 43

Parsing method: LALR

state 0

    (0) S' -> . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . simple_assignment
    (4) statement -> . array_declaration
    (5) statement -> . declaration_assignment
    (6) statement -> . array_assignment
    (7) statement -> . type declaration_list SEMICOLON
    (8) statement -> . const_declaration
    (41) simple_assignment -> . ID EQUALS expression SEMICOLON
    (10) array_declaration -> . type ID LBRACKET INTEGER RBRACKET SEMICOLON
    (43) declaration_assignment -> . type ID EQUALS expression SEMICOLON
    (42) array_assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (20) type -> . INT_TYPE
    (21) type -> . FLOAT_TYPE
    (22) type -> . BOOL_TYPE
    (23) type -> . CHAR_TYPE
    (9) const_declaration -> . CONST type ID EQUALS expression SEMICOLON

    ID              shift and go to state 9
    INT_TYPE        shift and go to state 10
    FLOAT_TYPE      shift and go to state 11
    BOOL_TYPE       shift and go to state 12
    CHAR_TYPE       shift and go to state 13
    CONST           shift and go to state 14

    statements                     shift and go to state 1
    statement                      shift and go to state 2
    simple_assignment              shift and go to state 3
    array_declaration              shift and go to state 4
    declaration_assignment         shift and go to state 5
    array_assignment               shift and go to state 6
    type                           shift and go to state 7
    const_declaration              shift and go to state 8

state 1

    (0) S' -> statements .



state 2

    (1) statements -> statement .
    (2) statements -> statement . statements
    (1) statements -> . statement
    (2) statements -> . statement statements
    (3) statement -> . simple_assignment
    (4) statement -> . array_declaration
    (5) statement -> . declaration_assignment
    (6) statement -> . array_assignment
    (7) statement -> . type declaration_list SEMICOLON
    (8) statement -> . const_declaration
    (41) simple_assignment -> . ID EQUALS expression SEMICOLON
    (10) array_declaration -> . type ID LBRACKET INTEGER RBRACKET SEMICOLON
    (43) declaration_assignment -> . type ID EQUALS expression SEMICOLON
    (42) array_assignment -> . ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON
    (20) type -> . INT_TYPE
    (21) type -> . FLOAT_TYPE
    (22) type -> . BOOL_TYPE
    (23) type -> . CHAR_TYPE
    (9) const_declaration -> . CONST type ID EQUALS expression SEMICOLON

    $end            reduce using rule 1 (statements -> statement .)
    ID              shift and go to state 9
    INT_TYPE        shift and go to state 10
    FLOAT_TYPE      shift and go to state 11
    BOOL_TYPE       shift and go to state 12
    CHAR_TYPE       shift and go to state 13
    CONST           shift and go to state 14

    statement                      shift and go to state 2
    statements                     shift and go to state 15
    simple_assignment              shift and go to state 3
    array_declaration              shift and go to state 4
    declaration_assignment         shift and go to state 5
    array_assignment               shift and go to state 6
    type                           shift and go to state 7
    const_declaration              shift and go to state 8

state 3

    (3) statement -> simple_assignment .

    ID              reduce using rule 3 (statement -> simple_assignment .)
    INT_TYPE        reduce using rule 3 (statement -> simple_assignment .)
    FLOAT_TYPE      reduce using rule 3 (statement -> simple_assignment .)
    BOOL_TYPE       reduce using rule 3 (statement -> simple_assignment .)
    CHAR_TYPE       reduce using rule 3 (statement -> simple_assignment .)
    CONST           reduce using rule 3 (statement -> simple_assignment .)
    $end            reduce using rule 3 (statement -> simple_assignment .)


state 4

    (4) statement -> array_declaration .

    ID              reduce using rule 4 (statement -> array_declaration .)
    INT_TYPE        reduce using rule 4 (statement -> array_declaration .)
    FLOAT_TYPE      reduce using rule 4 (statement -> array_declaration .)
    BOOL_TYPE       reduce using rule 4 (statement -> array_declaration .)
    CHAR_TYPE       reduce using rule 4 (statement -> array_declaration .)
    CONST           reduce using rule 4 (statement -> array_declaration .)
    $end            reduce using rule 4 (statement -> array_declaration .)


state 5

    (5) statement -> declaration_assignment .

    ID              reduce using rule 5 (statement -> declaration_assignment .)
    INT_TYPE        reduce using rule 5 (statement -> declaration_assignment .)
    FLOAT_TYPE      reduce using rule 5 (statement -> declaration_assignment .)
    BOOL_TYPE       reduce using rule 5 (statement -> declaration_assignment .)
    CHAR_TYPE       reduce using rule 5 (statement -> declaration_assignment .)
    CONST           reduce using rule 5 (statement -> declaration_assignment .)
    $end            reduce using rule 5 (statement -> declaration_assignment .)


state 6

    (6) statement -> array_assignment .

    ID              reduce using rule 6 (statement -> array_assignment .)
    INT_TYPE        reduce using rule 6 (statement -> array_assignment .)
    FLOAT_TYPE      reduce using rule 6 (statement -> array_assignment .)
    BOOL_TYPE       reduce using rule 6 (statement -> array_assignment .)
    CHAR_TYPE       reduce using rule 6 (statement -> array_assignment .)
    CONST           reduce using rule 6 (statement -> array_assignment .)
    $end            reduce using rule 6 (statement -> array_assignment .)


state 7

    (7) statement -> type . declaration_list SEMICOLON
    (10) array_declaration -> type . ID LBRACKET INTEGER RBRACKET SEMICOLON
    (43) declaration_assignment -> type . ID EQUALS expression SEMICOLON
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration COMMA declaration_list
    (13) declaration -> . ID
    (14) declaration -> . ID EQUALS expression
    (15) declaration -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 17

    declaration_list               shift and go to state 16
    declaration                    shift and go to state 18

state 8

    (8) statement -> const_declaration .

    ID              reduce using rule 8 (statement -> const_declaration .)
    INT_TYPE        reduce using rule 8 (statement -> const_declaration .)
    FLOAT_TYPE      reduce using rule 8 (statement -> const_declaration .)
    BOOL_TYPE       reduce using rule 8 (statement -> const_declaration .)
    CHAR_TYPE       reduce using rule 8 (statement -> const_declaration .)
    CONST           reduce using rule 8 (statement -> const_declaration .)
    $end            reduce using rule 8 (statement -> const_declaration .)


state 9

    (41) simple_assignment -> ID . EQUALS expression SEMICOLON
    (42) array_assignment -> ID . LBRACKET expression RBRACKET EQUALS expression SEMICOLON

    EQUALS          shift and go to state 19
    LBRACKET        shift and go to state 20


state 10

    (20) type -> INT_TYPE .

    ID              reduce using rule 20 (type -> INT_TYPE .)


state 11

    (21) type -> FLOAT_TYPE .

    ID              reduce using rule 21 (type -> FLOAT_TYPE .)


state 12

    (22) type -> BOOL_TYPE .

    ID              reduce using rule 22 (type -> BOOL_TYPE .)


state 13

    (23) type -> CHAR_TYPE .

    ID              reduce using rule 23 (type -> CHAR_TYPE .)


state 14

    (9) const_declaration -> CONST . type ID EQUALS expression SEMICOLON
    (20) type -> . INT_TYPE
    (21) type -> . FLOAT_TYPE
    (22) type -> . BOOL_TYPE
    (23) type -> . CHAR_TYPE

    INT_TYPE        shift and go to state 10
    FLOAT_TYPE      shift and go to state 11
    BOOL_TYPE       shift and go to state 12
    CHAR_TYPE       shift and go to state 13

    type                           shift and go to state 21

state 15

    (2) statements -> statement statements .

    $end            reduce using rule 2 (statements -> statement statements .)


state 16

    (7) statement -> type declaration_list . SEMICOLON

    SEMICOLON       shift and go to state 22


state 17

    (10) array_declaration -> type ID . LBRACKET INTEGER RBRACKET SEMICOLON
    (43) declaration_assignment -> type ID . EQUALS expression SEMICOLON
    (13) declaration -> ID .
    (14) declaration -> ID . EQUALS expression
    (15) declaration -> ID . LBRACKET INTEGER RBRACKET

    LBRACKET        shift and go to state 23
    EQUALS          shift and go to state 24
    COMMA           reduce using rule 13 (declaration -> ID .)
    SEMICOLON       reduce using rule 13 (declaration -> ID .)


state 18

    (11) declaration_list -> declaration .
    (12) declaration_list -> declaration . COMMA declaration_list

    SEMICOLON       reduce using rule 11 (declaration_list -> declaration .)
    COMMA           shift and go to state 25


state 19

    (41) simple_assignment -> ID EQUALS . expression SEMICOLON
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 27
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 20

    (42) array_assignment -> ID LBRACKET . expression RBRACKET EQUALS expression SEMICOLON
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 36
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 21

    (9) const_declaration -> CONST type . ID EQUALS expression SEMICOLON

    ID              shift and go to state 37


state 22

    (7) statement -> type declaration_list SEMICOLON .

    ID              reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    INT_TYPE        reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    FLOAT_TYPE      reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    BOOL_TYPE       reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    CHAR_TYPE       reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    CONST           reduce using rule 7 (statement -> type declaration_list SEMICOLON .)
    $end            reduce using rule 7 (statement -> type declaration_list SEMICOLON .)


state 23

    (10) array_declaration -> type ID LBRACKET . INTEGER RBRACKET SEMICOLON
    (15) declaration -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 38


state 24

    (43) declaration_assignment -> type ID EQUALS . expression SEMICOLON
    (14) declaration -> ID EQUALS . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 39
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 25

    (12) declaration_list -> declaration COMMA . declaration_list
    (11) declaration_list -> . declaration
    (12) declaration_list -> . declaration COMMA declaration_list
    (13) declaration -> . ID
    (14) declaration -> . ID EQUALS expression
    (15) declaration -> . ID LBRACKET INTEGER RBRACKET

    ID              shift and go to state 41

    declaration                    shift and go to state 18
    declaration_list               shift and go to state 40

state 26

    (16) expression -> ID .
    (39) factor -> ID .
    (40) factor -> ID . LBRACKET expression RBRACKET

  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for OR resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for AND resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for EQ resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for NEQ resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GT resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for LTE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for GTE resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 16 (expression -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 16 (expression -> ID .)
    SEMICOLON       reduce using rule 16 (expression -> ID .)
    OR              reduce using rule 16 (expression -> ID .)
    AND             reduce using rule 16 (expression -> ID .)
    EQ              reduce using rule 16 (expression -> ID .)
    NEQ             reduce using rule 16 (expression -> ID .)
    LT              reduce using rule 16 (expression -> ID .)
    GT              reduce using rule 16 (expression -> ID .)
    LTE             reduce using rule 16 (expression -> ID .)
    GTE             reduce using rule 16 (expression -> ID .)
    RBRACKET        reduce using rule 16 (expression -> ID .)
    COMMA           reduce using rule 16 (expression -> ID .)
    RPAREN          reduce using rule 16 (expression -> ID .)
    LBRACKET        shift and go to state 42

  ! SEMICOLON       [ reduce using rule 39 (factor -> ID .) ]
  ! OR              [ reduce using rule 39 (factor -> ID .) ]
  ! AND             [ reduce using rule 39 (factor -> ID .) ]
  ! EQ              [ reduce using rule 39 (factor -> ID .) ]
  ! NEQ             [ reduce using rule 39 (factor -> ID .) ]
  ! LT              [ reduce using rule 39 (factor -> ID .) ]
  ! GT              [ reduce using rule 39 (factor -> ID .) ]
  ! LTE             [ reduce using rule 39 (factor -> ID .) ]
  ! GTE             [ reduce using rule 39 (factor -> ID .) ]
  ! RBRACKET        [ reduce using rule 39 (factor -> ID .) ]
  ! COMMA           [ reduce using rule 39 (factor -> ID .) ]
  ! RPAREN          [ reduce using rule 39 (factor -> ID .) ]


state 27

    (41) simple_assignment -> ID EQUALS expression . SEMICOLON
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    SEMICOLON       shift and go to state 43
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 28

    (17) expression -> FLOAT .

    SEMICOLON       reduce using rule 17 (expression -> FLOAT .)
    OR              reduce using rule 17 (expression -> FLOAT .)
    AND             reduce using rule 17 (expression -> FLOAT .)
    EQ              reduce using rule 17 (expression -> FLOAT .)
    NEQ             reduce using rule 17 (expression -> FLOAT .)
    LT              reduce using rule 17 (expression -> FLOAT .)
    GT              reduce using rule 17 (expression -> FLOAT .)
    LTE             reduce using rule 17 (expression -> FLOAT .)
    GTE             reduce using rule 17 (expression -> FLOAT .)
    RBRACKET        reduce using rule 17 (expression -> FLOAT .)
    COMMA           reduce using rule 17 (expression -> FLOAT .)
    RPAREN          reduce using rule 17 (expression -> FLOAT .)


state 29

    (18) expression -> INTEGER .
    (26) factor -> INTEGER .
    (37) comparison -> INTEGER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for OR resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for AND resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for EQ resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for NEQ resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for LT resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for GT resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for LTE resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for GTE resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for OR resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for AND resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for EQ resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for NEQ resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for LT resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for GT resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for LTE resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for GTE resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 18 (expression -> INTEGER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 18 (expression -> INTEGER .)
    SEMICOLON       reduce using rule 18 (expression -> INTEGER .)
    OR              reduce using rule 18 (expression -> INTEGER .)
    AND             reduce using rule 18 (expression -> INTEGER .)
    EQ              reduce using rule 18 (expression -> INTEGER .)
    NEQ             reduce using rule 18 (expression -> INTEGER .)
    LT              reduce using rule 18 (expression -> INTEGER .)
    GT              reduce using rule 18 (expression -> INTEGER .)
    LTE             reduce using rule 18 (expression -> INTEGER .)
    GTE             reduce using rule 18 (expression -> INTEGER .)
    RBRACKET        reduce using rule 18 (expression -> INTEGER .)
    COMMA           reduce using rule 18 (expression -> INTEGER .)
    RPAREN          reduce using rule 18 (expression -> INTEGER .)

  ! SEMICOLON       [ reduce using rule 26 (factor -> INTEGER .) ]
  ! OR              [ reduce using rule 26 (factor -> INTEGER .) ]
  ! AND             [ reduce using rule 26 (factor -> INTEGER .) ]
  ! EQ              [ reduce using rule 26 (factor -> INTEGER .) ]
  ! NEQ             [ reduce using rule 26 (factor -> INTEGER .) ]
  ! LT              [ reduce using rule 26 (factor -> INTEGER .) ]
  ! GT              [ reduce using rule 26 (factor -> INTEGER .) ]
  ! LTE             [ reduce using rule 26 (factor -> INTEGER .) ]
  ! GTE             [ reduce using rule 26 (factor -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 26 (factor -> INTEGER .) ]
  ! COMMA           [ reduce using rule 26 (factor -> INTEGER .) ]
  ! RPAREN          [ reduce using rule 26 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! OR              [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! AND             [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! EQ              [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! NEQ             [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! LT              [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! GT              [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! LTE             [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! GTE             [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! COMMA           [ reduce using rule 37 (comparison -> INTEGER .) ]
  ! RPAREN          [ reduce using rule 37 (comparison -> INTEGER .) ]


state 30

    (19) expression -> CHAR .

    SEMICOLON       reduce using rule 19 (expression -> CHAR .)
    OR              reduce using rule 19 (expression -> CHAR .)
    AND             reduce using rule 19 (expression -> CHAR .)
    EQ              reduce using rule 19 (expression -> CHAR .)
    NEQ             reduce using rule 19 (expression -> CHAR .)
    LT              reduce using rule 19 (expression -> CHAR .)
    GT              reduce using rule 19 (expression -> CHAR .)
    LTE             reduce using rule 19 (expression -> CHAR .)
    GTE             reduce using rule 19 (expression -> CHAR .)
    RBRACKET        reduce using rule 19 (expression -> CHAR .)
    COMMA           reduce using rule 19 (expression -> CHAR .)
    RPAREN          reduce using rule 19 (expression -> CHAR .)


state 31

    (24) expression -> term .

    SEMICOLON       reduce using rule 24 (expression -> term .)
    OR              reduce using rule 24 (expression -> term .)
    AND             reduce using rule 24 (expression -> term .)
    EQ              reduce using rule 24 (expression -> term .)
    NEQ             reduce using rule 24 (expression -> term .)
    LT              reduce using rule 24 (expression -> term .)
    GT              reduce using rule 24 (expression -> term .)
    LTE             reduce using rule 24 (expression -> term .)
    GTE             reduce using rule 24 (expression -> term .)
    RBRACKET        reduce using rule 24 (expression -> term .)
    COMMA           reduce using rule 24 (expression -> term .)
    RPAREN          reduce using rule 24 (expression -> term .)


state 32

    (35) expression -> NOT . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 52
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 33

    (25) term -> factor .

    SEMICOLON       reduce using rule 25 (term -> factor .)
    OR              reduce using rule 25 (term -> factor .)
    AND             reduce using rule 25 (term -> factor .)
    EQ              reduce using rule 25 (term -> factor .)
    NEQ             reduce using rule 25 (term -> factor .)
    LT              reduce using rule 25 (term -> factor .)
    GT              reduce using rule 25 (term -> factor .)
    LTE             reduce using rule 25 (term -> factor .)
    GTE             reduce using rule 25 (term -> factor .)
    RBRACKET        reduce using rule 25 (term -> factor .)
    COMMA           reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)


state 34

    (38) factor -> comparison .

    SEMICOLON       reduce using rule 38 (factor -> comparison .)
    OR              reduce using rule 38 (factor -> comparison .)
    AND             reduce using rule 38 (factor -> comparison .)
    EQ              reduce using rule 38 (factor -> comparison .)
    NEQ             reduce using rule 38 (factor -> comparison .)
    LT              reduce using rule 38 (factor -> comparison .)
    GT              reduce using rule 38 (factor -> comparison .)
    LTE             reduce using rule 38 (factor -> comparison .)
    GTE             reduce using rule 38 (factor -> comparison .)
    RBRACKET        reduce using rule 38 (factor -> comparison .)
    COMMA           reduce using rule 38 (factor -> comparison .)
    RPAREN          reduce using rule 38 (factor -> comparison .)


state 35

    (36) comparison -> LPAREN . expression RPAREN
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 53
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 36

    (42) array_assignment -> ID LBRACKET expression . RBRACKET EQUALS expression SEMICOLON
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    RBRACKET        shift and go to state 54
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 37

    (9) const_declaration -> CONST type ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 55


state 38

    (10) array_declaration -> type ID LBRACKET INTEGER . RBRACKET SEMICOLON
    (15) declaration -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 56


state 39

    (43) declaration_assignment -> type ID EQUALS expression . SEMICOLON
    (14) declaration -> ID EQUALS expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 57
    COMMA           reduce using rule 14 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! SEMICOLON       [ reduce using rule 14 (declaration -> ID EQUALS expression .) ]


state 40

    (12) declaration_list -> declaration COMMA declaration_list .

    SEMICOLON       reduce using rule 12 (declaration_list -> declaration COMMA declaration_list .)


state 41

    (13) declaration -> ID .
    (14) declaration -> ID . EQUALS expression
    (15) declaration -> ID . LBRACKET INTEGER RBRACKET

    COMMA           reduce using rule 13 (declaration -> ID .)
    SEMICOLON       reduce using rule 13 (declaration -> ID .)
    EQUALS          shift and go to state 58
    LBRACKET        shift and go to state 59


state 42

    (40) factor -> ID LBRACKET . expression RBRACKET
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 60
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 43

    (41) simple_assignment -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    INT_TYPE        reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    BOOL_TYPE       reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    CHAR_TYPE       reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    CONST           reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 41 (simple_assignment -> ID EQUALS expression SEMICOLON .)


state 44

    (27) expression -> expression OR . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 61
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 45

    (28) expression -> expression AND . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 62
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 46

    (29) expression -> expression EQ . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 63
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 47

    (30) expression -> expression NEQ . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 64
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 48

    (31) expression -> expression LT . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 65
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 49

    (32) expression -> expression GT . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 66
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 50

    (33) expression -> expression LTE . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 67
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 51

    (34) expression -> expression GTE . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 68
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 52

    (35) expression -> NOT expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 35 (expression -> NOT expression .)
    RBRACKET        reduce using rule 35 (expression -> NOT expression .)
    COMMA           reduce using rule 35 (expression -> NOT expression .)
    RPAREN          reduce using rule 35 (expression -> NOT expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 35 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 35 (expression -> NOT expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> NOT expression .) ]
  ! NEQ             [ reduce using rule 35 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 35 (expression -> NOT expression .) ]
  ! GT              [ reduce using rule 35 (expression -> NOT expression .) ]
  ! LTE             [ reduce using rule 35 (expression -> NOT expression .) ]
  ! GTE             [ reduce using rule 35 (expression -> NOT expression .) ]


state 53

    (36) comparison -> LPAREN expression . RPAREN
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    RPAREN          shift and go to state 69
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 54

    (42) array_assignment -> ID LBRACKET expression RBRACKET . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 70


state 55

    (9) const_declaration -> CONST type ID EQUALS . expression SEMICOLON
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 71
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 56

    (10) array_declaration -> type ID LBRACKET INTEGER RBRACKET . SEMICOLON
    (15) declaration -> ID LBRACKET INTEGER RBRACKET .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 72
    COMMA           reduce using rule 15 (declaration -> ID LBRACKET INTEGER RBRACKET .)

  ! SEMICOLON       [ reduce using rule 15 (declaration -> ID LBRACKET INTEGER RBRACKET .) ]


state 57

    (43) declaration_assignment -> type ID EQUALS expression SEMICOLON .

    ID              reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    INT_TYPE        reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    BOOL_TYPE       reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    CHAR_TYPE       reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    CONST           reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 43 (declaration_assignment -> type ID EQUALS expression SEMICOLON .)


state 58

    (14) declaration -> ID EQUALS . expression
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 73
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 59

    (15) declaration -> ID LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 74


state 60

    (40) factor -> ID LBRACKET expression . RBRACKET
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    RBRACKET        shift and go to state 75
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 61

    (27) expression -> expression OR expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 27 (expression -> expression OR expression .)
    COMMA           reduce using rule 27 (expression -> expression OR expression .)
    RPAREN          reduce using rule 27 (expression -> expression OR expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! LTE             [ reduce using rule 27 (expression -> expression OR expression .) ]
  ! GTE             [ reduce using rule 27 (expression -> expression OR expression .) ]


state 62

    (28) expression -> expression AND expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 28 (expression -> expression AND expression .)
    COMMA           reduce using rule 28 (expression -> expression AND expression .)
    RPAREN          reduce using rule 28 (expression -> expression AND expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LTE             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! GTE             [ reduce using rule 28 (expression -> expression AND expression .) ]


state 63

    (29) expression -> expression EQ expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression EQ expression .)
    RBRACKET        reduce using rule 29 (expression -> expression EQ expression .)
    COMMA           reduce using rule 29 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 29 (expression -> expression EQ expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! LTE             [ reduce using rule 29 (expression -> expression EQ expression .) ]
  ! GTE             [ reduce using rule 29 (expression -> expression EQ expression .) ]


state 64

    (30) expression -> expression NEQ expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 30 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 30 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 30 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression NEQ expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! LTE             [ reduce using rule 30 (expression -> expression NEQ expression .) ]
  ! GTE             [ reduce using rule 30 (expression -> expression NEQ expression .) ]


state 65

    (31) expression -> expression LT expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 31 (expression -> expression LT expression .)
    RBRACKET        reduce using rule 31 (expression -> expression LT expression .)
    COMMA           reduce using rule 31 (expression -> expression LT expression .)
    RPAREN          reduce using rule 31 (expression -> expression LT expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! NEQ             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LTE             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! GTE             [ reduce using rule 31 (expression -> expression LT expression .) ]


state 66

    (32) expression -> expression GT expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 32 (expression -> expression GT expression .)
    RBRACKET        reduce using rule 32 (expression -> expression GT expression .)
    COMMA           reduce using rule 32 (expression -> expression GT expression .)
    RPAREN          reduce using rule 32 (expression -> expression GT expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! NEQ             [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! LTE             [ reduce using rule 32 (expression -> expression GT expression .) ]
  ! GTE             [ reduce using rule 32 (expression -> expression GT expression .) ]


state 67

    (33) expression -> expression LTE expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 33 (expression -> expression LTE expression .)
    RBRACKET        reduce using rule 33 (expression -> expression LTE expression .)
    COMMA           reduce using rule 33 (expression -> expression LTE expression .)
    RPAREN          reduce using rule 33 (expression -> expression LTE expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! EQ              [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! NEQ             [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! LT              [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! GT              [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 33 (expression -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 33 (expression -> expression LTE expression .) ]


state 68

    (34) expression -> expression GTE expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
    SEMICOLON       reduce using rule 34 (expression -> expression GTE expression .)
    RBRACKET        reduce using rule 34 (expression -> expression GTE expression .)
    COMMA           reduce using rule 34 (expression -> expression GTE expression .)
    RPAREN          reduce using rule 34 (expression -> expression GTE expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51

  ! OR              [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! AND             [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! NEQ             [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! LT              [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! GT              [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 34 (expression -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 34 (expression -> expression GTE expression .) ]


state 69

    (36) comparison -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    OR              reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    AND             reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    EQ              reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    LT              reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    GT              reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    LTE             reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    GTE             reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 36 (comparison -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 36 (comparison -> LPAREN expression RPAREN .)


state 70

    (42) array_assignment -> ID LBRACKET expression RBRACKET EQUALS . expression SEMICOLON
    (16) expression -> . ID
    (17) expression -> . FLOAT
    (18) expression -> . INTEGER
    (19) expression -> . CHAR
    (24) expression -> . term
    (27) expression -> . expression OR expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression EQ expression
    (30) expression -> . expression NEQ expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression GT expression
    (33) expression -> . expression LTE expression
    (34) expression -> . expression GTE expression
    (35) expression -> . NOT expression
    (25) term -> . factor
    (26) factor -> . INTEGER
    (38) factor -> . comparison
    (39) factor -> . ID
    (40) factor -> . ID LBRACKET expression RBRACKET
    (36) comparison -> . LPAREN expression RPAREN
    (37) comparison -> . INTEGER

    ID              shift and go to state 26
    FLOAT           shift and go to state 28
    INTEGER         shift and go to state 29
    CHAR            shift and go to state 30
    NOT             shift and go to state 32
    LPAREN          shift and go to state 35

    expression                     shift and go to state 76
    term                           shift and go to state 31
    factor                         shift and go to state 33
    comparison                     shift and go to state 34

state 71

    (9) const_declaration -> CONST type ID EQUALS expression . SEMICOLON
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    SEMICOLON       shift and go to state 77
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 72

    (10) array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .

    ID              reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    INT_TYPE        reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    FLOAT_TYPE      reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    BOOL_TYPE       reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    CHAR_TYPE       reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    CONST           reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)
    $end            reduce using rule 10 (array_declaration -> type ID LBRACKET INTEGER RBRACKET SEMICOLON .)


state 73

    (14) declaration -> ID EQUALS expression .
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    COMMA           reduce using rule 14 (declaration -> ID EQUALS expression .)
    SEMICOLON       reduce using rule 14 (declaration -> ID EQUALS expression .)
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 74

    (15) declaration -> ID LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 78


state 75

    (40) factor -> ID LBRACKET expression RBRACKET .

    SEMICOLON       reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    OR              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    AND             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    LT              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    LTE             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    GTE             reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 40 (factor -> ID LBRACKET expression RBRACKET .)


state 76

    (42) array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression . SEMICOLON
    (27) expression -> expression . OR expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . EQ expression
    (30) expression -> expression . NEQ expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . GT expression
    (33) expression -> expression . LTE expression
    (34) expression -> expression . GTE expression

    SEMICOLON       shift and go to state 79
    OR              shift and go to state 44
    AND             shift and go to state 45
    EQ              shift and go to state 46
    NEQ             shift and go to state 47
    LT              shift and go to state 48
    GT              shift and go to state 49
    LTE             shift and go to state 50
    GTE             shift and go to state 51


state 77

    (9) const_declaration -> CONST type ID EQUALS expression SEMICOLON .

    ID              reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    INT_TYPE        reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    BOOL_TYPE       reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    CHAR_TYPE       reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    CONST           reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 9 (const_declaration -> CONST type ID EQUALS expression SEMICOLON .)


state 78

    (15) declaration -> ID LBRACKET INTEGER RBRACKET .

    COMMA           reduce using rule 15 (declaration -> ID LBRACKET INTEGER RBRACKET .)
    SEMICOLON       reduce using rule 15 (declaration -> ID LBRACKET INTEGER RBRACKET .)


state 79

    (42) array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .

    ID              reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    INT_TYPE        reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    FLOAT_TYPE      reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    BOOL_TYPE       reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    CHAR_TYPE       reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    CONST           reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)
    $end            reduce using rule 42 (array_assignment -> ID LBRACKET expression RBRACKET EQUALS expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 39 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for LTE in state 52 resolved as shift
WARNING: shift/reduce conflict for GTE in state 52 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 56 resolved as shift
WARNING: shift/reduce conflict for OR in state 61 resolved as shift
WARNING: shift/reduce conflict for AND in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for LT in state 61 resolved as shift
WARNING: shift/reduce conflict for GT in state 61 resolved as shift
WARNING: shift/reduce conflict for LTE in state 61 resolved as shift
WARNING: shift/reduce conflict for GTE in state 61 resolved as shift
WARNING: shift/reduce conflict for OR in state 62 resolved as shift
WARNING: shift/reduce conflict for AND in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LTE in state 62 resolved as shift
WARNING: shift/reduce conflict for GTE in state 62 resolved as shift
WARNING: shift/reduce conflict for OR in state 63 resolved as shift
WARNING: shift/reduce conflict for AND in state 63 resolved as shift
WARNING: shift/reduce conflict for EQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for GT in state 63 resolved as shift
WARNING: shift/reduce conflict for LTE in state 63 resolved as shift
WARNING: shift/reduce conflict for GTE in state 63 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for EQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for LTE in state 64 resolved as shift
WARNING: shift/reduce conflict for GTE in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 65 resolved as shift
WARNING: shift/reduce conflict for EQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for LTE in state 65 resolved as shift
WARNING: shift/reduce conflict for GTE in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 66 resolved as shift
WARNING: shift/reduce conflict for AND in state 66 resolved as shift
WARNING: shift/reduce conflict for EQ in state 66 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for LT in state 66 resolved as shift
WARNING: shift/reduce conflict for GT in state 66 resolved as shift
WARNING: shift/reduce conflict for LTE in state 66 resolved as shift
WARNING: shift/reduce conflict for GTE in state 66 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for EQ in state 67 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 67 resolved as shift
WARNING: shift/reduce conflict for LT in state 67 resolved as shift
WARNING: shift/reduce conflict for GT in state 67 resolved as shift
WARNING: shift/reduce conflict for LTE in state 67 resolved as shift
WARNING: shift/reduce conflict for GTE in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for EQ in state 68 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for LT in state 68 resolved as shift
WARNING: shift/reduce conflict for GT in state 68 resolved as shift
WARNING: shift/reduce conflict for LTE in state 68 resolved as shift
WARNING: shift/reduce conflict for GTE in state 68 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (expression -> ID)
WARNING: rejected rule (factor -> ID) in state 26
WARNING: reduce/reduce conflict in state 29 resolved using rule (expression -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 29
WARNING: reduce/reduce conflict in state 29 resolved using rule (expression -> INTEGER)
WARNING: rejected rule (comparison -> INTEGER) in state 29
WARNING: Rule (factor -> ID) is never reduced
WARNING: Rule (factor -> INTEGER) is never reduced
WARNING: Rule (comparison -> INTEGER) is never reduced
